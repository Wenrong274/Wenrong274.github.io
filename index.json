[{"content":"我是黃文榮，是一位 Unity 工程師。\n從 2015 年 11 月開發到現在，有 5 年以上的獨立開發時間，且有上架超過 10 隻 App 至雙平台的經驗，並且長期維護公司主力產品。\n擁有 AR、VR、MR 等開發經驗，且能夠獨立完成內容。\nExperiences   2015/11月 - 至今 錦田雲端科技股份有限公司\n 維護、製作公司主力產品 Quest Cloud「探索雲」數位學習方塊。 製作 AR、VR、MR 遊戲。 客製化遊戲 App。    Skills   Unity Tools\n DOTween AssetBundle Addressable Assets System Vuforia Google Cardboard AR Foundation UniTask    Other\n Android Studio Xcode Windows Forms Git Inno Setup    Contact E-Mail：hybrid0930@gmail.com\n ","permalink":"https://wenrongdev.com/profile/about/","summary":"我是黃文榮，是一位 Unity 工程師。\n從 2015 年 11 月開發到現在，有 5 年以上的獨立開發時間，且有上架超過 10 隻 App 至雙平台的經驗，並且長期維護公司主力產品。\n擁有 AR、VR、MR 等開發經驗，且能夠獨立完成內容。\nExperiences   2015/11月 - 至今 錦田雲端科技股份有限公司\n 維護、製作公司主力產品 Quest Cloud「探索雲」數位學習方塊。 製作 AR、VR、MR 遊戲。 客製化遊戲 App。    Skills   Unity Tools\n DOTween AssetBundle Addressable Assets System Vuforia Google Cardboard AR Foundation UniTask    Other\n Android Studio Xcode Windows Forms Git Inno Setup    Contact E-Mail：hybrid0930@gmail.","title":"About"},{"content":"前言 主要用來 Unity app A 如何傳遞資訊給 Unity app B。\nDemo Script private class PropertyInfo { public string elementA = string.Empty; public string elementB = string.Empty; public string elementC = string.Empty; } public void Launch(string bundleId, string storelink) { bool fail = false; AndroidJavaClass up = new AndroidJavaClass(\u0026#34;com.unity3d.player.UnityPlayer\u0026#34;); AndroidJavaObject ca = up.GetStatic\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;currentActivity\u0026#34;); AndroidJavaObject packageManager = ca.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getPackageManager\u0026#34;); AndroidJavaObject launchIntent = null; try { launchIntent = packageManager.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getLaunchIntentForPackage\u0026#34;, bundleId); } catch (Exception e) { fail = true; } if (fail || launchIntent == null) Application.OpenURL(storelink); else { launchIntent.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;putExtra\u0026#34;, \u0026#34;elementA\u0026#34;, LaunchData.elementA); launchIntent.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;putExtra\u0026#34;, \u0026#34;elementB\u0026#34;, LaunchData.elementB); launchIntent.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;putExtra\u0026#34;, \u0026#34;elementC\u0026#34;, LaunchData.elementC); ca.Call(\u0026#34;startActivity\u0026#34;, launchIntent); } up.Dispose(); ca.Dispose(); packageManager.Dispose(); launchIntent.Dispose(); } Property PropertyInfo 是用來接受資訊的 class，這邊可以自行修改。\n Get Android intent Data for Unity\n","permalink":"https://wenrongdev.com/posts/launch-from-within-a-unity-app-another-unity-app-android/","summary":"前言 主要用來 Unity app A 如何傳遞資訊給 Unity app B。\nDemo Script private class PropertyInfo { public string elementA = string.Empty; public string elementB = string.Empty; public string elementC = string.Empty; } public void Launch(string bundleId, string storelink) { bool fail = false; AndroidJavaClass up = new AndroidJavaClass(\u0026#34;com.unity3d.player.UnityPlayer\u0026#34;); AndroidJavaObject ca = up.GetStatic\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;currentActivity\u0026#34;); AndroidJavaObject packageManager = ca.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getPackageManager\u0026#34;); AndroidJavaObject launchIntent = null; try { launchIntent = packageManager.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getLaunchIntentForPackage\u0026#34;, bundleId); } catch (Exception e) { fail = true; } if (fail || launchIntent == null) Application.","title":"Launch From Within a Unity App Another Unity App Android"},{"content":"前言 主要用來 A App 呼叫 B App 時，B App 該如何接受資料。\n而 B App 是使用 Unity 接收。\nDemo Script private class PropertyInfo { public string elementA = string.Empty; public string elementB = string.Empty; public string elementC = string.Empty; } public class ExternalCall : MonoBehaviour { PropertyInfo info = new PropertyInfo(); private void Awake() { #if (!UNITY_EDITOR \u0026amp;\u0026amp; UNITY_ANDROID)  CreatePushClass(new AndroidJavaClass(\u0026#34;com.unity3d.player.UnityPlayer\u0026#34;)); #endif  } public void CreatePushClass(AndroidJavaClass UnityPlayer) { #if UNITY_ANDROID  AndroidJavaObject currentActivity = UnityPlayer.GetStatic\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;currentActivity\u0026#34;); AndroidJavaObject intent = currentActivity.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getIntent\u0026#34;); bool elementA_hasExtra = IsBool(intent, \u0026#34;elementA\u0026#34;); bool elementB_hasExtra = IsBool(intent, \u0026#34;elementB\u0026#34;); bool elementC_hasExtra = IsBool(intent, \u0026#34;elementC\u0026#34;); AndroidJavaObject extras = GetExtras(intent); if (extras != null) { if (elementA_hasExtra) info.elementA = GetProperty(extras, \u0026#34;elementA\u0026#34;); if (elementB_hasExtra) info.elementB = GetProperty(extras, \u0026#34;elementB\u0026#34;); if (elementC_hasExtra) info.elementC = GetProperty(extras, \u0026#34;elementC\u0026#34;); } #endif  } private bool IsBool(AndroidJavaObject intent, string method) { bool b = false; try { b = intent.Call\u0026lt;bool\u0026gt;(\u0026#34;hasExtra\u0026#34;, method); } catch (Exception e) { Debug.Log(e.Message); } return b; } private AndroidJavaObject GetExtras(AndroidJavaObject intent) { AndroidJavaObject extras = null; try { extras = intent.Call\u0026lt;AndroidJavaObject\u0026gt;(\u0026#34;getExtras\u0026#34;); } catch (Exception e) { Debug.Log(e.Message); } return extras; } private string GetProperty(AndroidJavaObject extras, string name) { string s = string.Empty; try { s = extras.Call\u0026lt;string\u0026gt;(\u0026#34;getString\u0026#34;, name); } catch (Exception e) { Debug.Log(e.Message); } return s; } } Property PropertyInfo 是用來接受資訊的 class，這邊可以自行修改。\n Launch from within a Unity app another Unity app(Android)\n","permalink":"https://wenrongdev.com/posts/get-android-intent-data-for-unity/","summary":"前言 主要用來 A App 呼叫 B App 時，B App 該如何接受資料。\n而 B App 是使用 Unity 接收。\nDemo Script private class PropertyInfo { public string elementA = string.Empty; public string elementB = string.Empty; public string elementC = string.Empty; } public class ExternalCall : MonoBehaviour { PropertyInfo info = new PropertyInfo(); private void Awake() { #if (!UNITY_EDITOR \u0026amp;\u0026amp; UNITY_ANDROID)  CreatePushClass(new AndroidJavaClass(\u0026#34;com.unity3d.player.UnityPlayer\u0026#34;)); #endif  } public void CreatePushClass(AndroidJavaClass UnityPlayer) { #if UNITY_ANDROID  AndroidJavaObject currentActivity = UnityPlayer.","title":"Get Android Intent Data for Unity"},{"content":"Install 去官網下載 Inno Setup，請下載 Stable Release 版本。\nAdd Language  下載官方提供的 Github，直接下載 Releases 版本，完成後解壓縮。 複製 root/Files/Languages 資料夾，貼上並且覆蓋 Inno Setup 安裝資料夾。  使用方式 可以參考以下腳本，也可以自己寫，不知道寫法可以參考官方文件。\n#define MyAppGUID \u0026quot;{{D0D7EBDD-2493-4086-A306-AB012D2AFA93}\u0026quot; #define MyAppName \u0026quot;Examle\u0026quot; #define MyAppFolder \u0026quot;ExampleFolder\u0026quot; #define MyAppSetupExeName \u0026quot;Examle\u0026quot; #define MyAppExeName \u0026quot;Examle.exe\u0026quot; #define MyAppURL \u0026quot;https://wenrongdev.com/\u0026quot; #define MyAppPublisher \u0026quot;wen rong studio\u0026quot; [Setup] AppId={#MyAppGUID} AppName={#MyAppName} AppVersion=0.1.0 AppVerName={#MyAppName} AppPublisher = {#MyAppPublisher} AppPublisherURL = {#MyAppURL} AppSupportURL = {#MyAppURL} AppUpdatesURL = {#MyAppURL} Compression = lzma2 DefaultDirName={commonpf32}\\{#MyAppFolder} DisableProgramGroupPage=yes DefaultGroupName={#MyAppName} UninstallDisplayIcon={app}ForwardSlash{#MyAppExeName} SolidCompression = no OutputDir = \u0026quot;Setup\u0026quot; OutputBaseFilename = {#MyAppSetupExeName} ShowLanguageDialog=yes // 是否需要分割 DiskSpanning=yes SlicesPerDisk=3 DiskSliceSize=1566000000 /// [Languages] Name: EN; MessagesFile: \u0026quot;compiler:Default.isl\u0026quot; Name: CT; MessagesFile: \u0026quot;compiler:Languages\\Unofficial\\ChineseTraditional.isl\u0026quot; Name: CS; MessagesFile: \u0026quot;compiler:Languages\\Unofficial\\ChineseSimplified.isl\u0026quot; Name: JP; MessagesFile: \u0026quot;compiler:Languages\\Japanese.isl\u0026quot; [CustomMessages] MyAppName = {#MyAppName} MyAppVerName = {#MyAppName} %1 [Messages] BeveledLabel = {#MyAppURL} [Dirs] Name: \u0026quot;{app}\u0026quot;; Permissions: everyone-full [Files] Source: \u0026quot;{#MyAppFolder}\\*\u0026quot;; DestDir: \u0026quot;{app}\\{#MyAppFolder}\u0026quot;; Flags: ignoreversion recursesubdirs [Icons] Name: \u0026quot;{userdesktop}\\{cm:MyAppName}\u0026quot;; Filename: \u0026quot;{app}\\{#MyAppFolder}\\{#MyAppExeName}\u0026quot;; [Code] function GetNumber(var temp: String): Integer; var part: String; pos1: Integer; begin if Length(temp) = 0 then begin Result := -1; Exit; end; pos1 := Pos('.', temp); if (pos1 = 0) then begin Result := StrToInt(temp); temp := ''; end else begin part := Copy(temp, 1, pos1 - 1); temp := Copy(temp, pos1 + 1, Length(temp)); Result := StrToInt(part); end; end; function CompareInner(var temp1, temp2: String): Integer; var num1, num2: Integer; begin num1 := GetNumber(temp1); num2 := GetNumber(temp2); if (num1 = -1) or (num2 = -1) then begin Result := 0; Exit; end; if (num1 \u0026gt; num2) then begin Result := 1; end else if (num1 \u0026lt; num2) then begin Result := -1; end else begin Result := CompareInner(temp1, temp2); end; end; function CompareVersion(str1, str2: String): Integer; var temp1, temp2: String; begin temp1 := str1; temp2 := str2; Result := CompareInner(temp1, temp2); end; function InitializeSetup(): Boolean; var oldVersion: String; uninstaller: String; ErrorCode: Integer; vCurID :String; vCurAppName :String; begin vCurID:= '{#SetupSetting(\u0026quot;AppId\u0026quot;)}'; vCurAppName:= '{#SetupSetting(\u0026quot;AppName\u0026quot;)}'; vCurID:= Copy(vCurID, 2, Length(vCurID) - 1); if RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\' + vCurID + '_is1') then begin RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\' + vCurID + '_is1', 'DisplayVersion', oldVersion); if (CompareVersion(oldVersion, '{#SetupSetting(\u0026quot;AppVersion\u0026quot;)}') \u0026lt; 0) then begin if MsgBox('Version ' + oldVersion + ' of ' + vCurAppName + ' is already installed. Continue to use this old version?', mbConfirmation, MB_YESNO) = IDYES then begin Result := False; end else begin RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\' + vCurID + '_is1', 'UninstallString', uninstaller); ShellExec('runas', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode); Result := True; end; end else begin MsgBox('Version ' + oldVersion + ' of ' + vCurAppName + ' is already installed. This installer will exit.', mbInformation, MB_OK); Result := False; end; end else begin Result := True; end; end; 修改方式 假如是使用複製舊有的 .iss 檔，只需要修改幾個需要注意的文字即可。\n正常的資料夾結構\n   Folder Description     ExampleFolder 打包前的資料夾   Setup Inno Setup 輸出的資料夾   .iss Inno Setup Script    修改 .iss #define MyAppGUID \u0026quot;GUID\u0026quot; #define MyAppName \u0026quot;Examle\u0026quot; #define MyAppFolder \u0026quot;ExampleFolder\u0026quot; #define MyAppSetupExeName \u0026quot;Examle\u0026quot; #define MyAppExeName \u0026quot;Examle.exe\u0026quot; #define MyAppURL \u0026quot;https://wenrongdev.com/\u0026quot; #define MyAppPublisher \u0026quot;wen rong studio\u0026quot; 需修改地方    Arg Description     MyAppGUID 安裝系統 GUID，產生方式為 Tools/Generated GUID。   MyAppName 桌面路徑名稱 。   MyAppFolder 安裝目錄名稱。   MyAppSetupExeName Inno Setup 輸出安裝檔名稱 。    取得 GUID 方法 Github  ","permalink":"https://wenrongdev.com/posts/example-inno-setup/","summary":"Install 去官網下載 Inno Setup，請下載 Stable Release 版本。\nAdd Language  下載官方提供的 Github，直接下載 Releases 版本，完成後解壓縮。 複製 root/Files/Languages 資料夾，貼上並且覆蓋 Inno Setup 安裝資料夾。  使用方式 可以參考以下腳本，也可以自己寫，不知道寫法可以參考官方文件。\n#define MyAppGUID \u0026quot;{{D0D7EBDD-2493-4086-A306-AB012D2AFA93}\u0026quot; #define MyAppName \u0026quot;Examle\u0026quot; #define MyAppFolder \u0026quot;ExampleFolder\u0026quot; #define MyAppSetupExeName \u0026quot;Examle\u0026quot; #define MyAppExeName \u0026quot;Examle.exe\u0026quot; #define MyAppURL \u0026quot;https://wenrongdev.com/\u0026quot; #define MyAppPublisher \u0026quot;wen rong studio\u0026quot; [Setup] AppId={#MyAppGUID} AppName={#MyAppName} AppVersion=0.1.0 AppVerName={#MyAppName} AppPublisher = {#MyAppPublisher} AppPublisherURL = {#MyAppURL} AppSupportURL = {#MyAppURL} AppUpdatesURL = {#MyAppURL} Compression = lzma2 DefaultDirName={commonpf32}\\{#MyAppFolder} DisableProgramGroupPage=yes DefaultGroupName={#MyAppName} UninstallDisplayIcon={app}ForwardSlash{#MyAppExeName} SolidCompression = no OutputDir = \u0026quot;Setup\u0026quot; OutputBaseFilename = {#MyAppSetupExeName} ShowLanguageDialog=yes // 是否需要分割 DiskSpanning=yes SlicesPerDisk=3 DiskSliceSize=1566000000 /// [Languages] Name: EN; MessagesFile: \u0026quot;compiler:Default.","title":"Example Inno Setup"},{"content":"前言 因為某些程式開啟時，會跳出需要系統管理員（Administrator）權限執行程式，也導致了只要是ㄧ般使用者每次開啟時都需要輸入系統管理員密碼來執行。為了ㄧ般使用者的權限問題也不能關閉 Windows UAC。 也不可能修改一般使用者的權限，所以需要讓 Windows UAC 加入此程式為白名單，這樣就不會每次都會跳出權限要求。\n已知限制條件  程式必須以 Administrator 執行 一般使用者可以執行 不可完全關閉 Windows UAC  解決方式 根據不變更UAC安全性，但執行程式時又不擾民的設定方式，可以在 Windows Regedit 新增白名單。\n Win+R 輸入 regedit 執行 根據此路徑尋找 HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers 右鍵新增字串值，名稱為程式（exe）路徑、資料為~ RunAsInvoker  C# 解決方式 public class RegEditWhiteList { public string keyName { get; set; } private readonly string root = @\u0026#34;Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\u0026#34;; private readonly string keyValue = \u0026#34;~ RunAsInvoker\u0026#34;; public RegEditWhiteList(string keyName) { this.keyName = keyName; } public void SendRegedit() { RegistryKey key = Registry.CurrentUser.OpenSubKey(root, true); key.SetValue(keyName, keyValue,RegistryValueKind.String); key.Close(); } } GitHub 使用方式 因為修改註冊碼是修正當前使用者的註冊碼，因此只要換使用者就需要再新增一次白名單。\n參考資料 不變更UAC安全性，但執行程式時又不擾民的設定方式\n ","permalink":"https://wenrongdev.com/posts/whitelist-for-windows-uac/","summary":"前言 因為某些程式開啟時，會跳出需要系統管理員（Administrator）權限執行程式，也導致了只要是ㄧ般使用者每次開啟時都需要輸入系統管理員密碼來執行。為了ㄧ般使用者的權限問題也不能關閉 Windows UAC。 也不可能修改一般使用者的權限，所以需要讓 Windows UAC 加入此程式為白名單，這樣就不會每次都會跳出權限要求。\n已知限制條件  程式必須以 Administrator 執行 一般使用者可以執行 不可完全關閉 Windows UAC  解決方式 根據不變更UAC安全性，但執行程式時又不擾民的設定方式，可以在 Windows Regedit 新增白名單。\n Win+R 輸入 regedit 執行 根據此路徑尋找 HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers 右鍵新增字串值，名稱為程式（exe）路徑、資料為~ RunAsInvoker  C# 解決方式 public class RegEditWhiteList { public string keyName { get; set; } private readonly string root = @\u0026#34;Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\u0026#34;; private readonly string keyValue = \u0026#34;~ RunAsInvoker\u0026#34;; public RegEditWhiteList(string keyName) { this.keyName = keyName; } public void SendRegedit() { RegistryKey key = Registry.","title":"Whitelist for Windows UAC"},{"content":"前言  Unity 2019.2.11f1 Vuforia 8.5.9  iOS Build and Run Error ld: library not found for -liPhone-lib clang: error: linker command failed with exit code 1 (use -v to see invocation) Solution - iOS Build and Run Error Build Setting -\u0026gt; Search Paths -\u0026gt; Library Search Paths\n移除 \u0026quot;$(SECROOT)\u0026quot; 參數\niOS Archive Error ld: warning: ignoring file ... building for iOS-armv7 but attempting to link with file built for iOS-arm64. Solution - iOS Archive Error 根據 Vuforia Engine Release Notes 在 v8.1.7之後不支援 32-bit，並且最低支援 iOS 11，因此需要把專案版本最低版本設定為 iOS。\n  設定 iOS architectures\nBuild Setting -\u0026gt; Architectures -\u0026gt; Architectures\nArchitectures 改為 Standard architectures\n  設定 iOS 版本\nBuild Setting -\u0026gt; Deployment -\u0026gt; iOS Deployment Target\niOS Deployment Target 改為 iOS 11.0\n  iOS Distribution Error ERROR ITMS-90534 Solution - iOS Distribution Error 請使用 Xcode 11.2.1 輸出，即可修正。\n參考文章 Unity Xcode Error \u0026ldquo;library not found for -\u0026rdquo; の解決方法\nCan\u0026rsquo;t submit apps to AppStore: ERROR ITMS-90534: \u0026ldquo;Invalid Toolchain\n ","permalink":"https://wenrongdev.com/posts/ios-build-note-for-unity-2019-vuforia/","summary":"前言  Unity 2019.2.11f1 Vuforia 8.5.9  iOS Build and Run Error ld: library not found for -liPhone-lib clang: error: linker command failed with exit code 1 (use -v to see invocation) Solution - iOS Build and Run Error Build Setting -\u0026gt; Search Paths -\u0026gt; Library Search Paths\n移除 \u0026quot;$(SECROOT)\u0026quot; 參數\niOS Archive Error ld: warning: ignoring file ... building for iOS-armv7 but attempting to link with file built for iOS-arm64.","title":"IOS Build Note for Unity 2019 Vuforia"},{"content":"前言 由於 iTunes 12.6 之後不提供 .ipa 檔安裝，導致無法提供測試 App，所以有人研究出很多安裝方式。不過這邊主要是介紹 OTA 的方式。\n其他的安裝方式：iTunes 12.7 移除了 Apps 的選項，我該如何安裝 .ipa 檔案到 iOS 裝置？\nUsing OTA 使用 OTA（Over-the-Air）需要有三個檔案 .ipa(ad-Hoc)、.plist、index.html\n.ipa(ad-Hoc) 需要上傳去雲端空間，目前選擇的雲端空間是 Dropbox。\n還需要 Host Website 上傳 .plist、index.html，目前選擇的是 GitHub。\n所以只要使用 Host Website 就可以安裝了。\n參考文章：Error when distributing an IPA over the air with dropbox - iOS 7.1\nUpload .ipa to Dropbox and Get public link   先把輸出好的 .ipa(ad-Hoc) 上傳至 Dropbox 並且設定分享。\n  將分享網址裡的 www.dropbox.com 替換為 dl.dropboxusercontent.com。\n  紀錄修改 public link。\n  Create manifest.plist \u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt; \u0026lt;!DOCTYPE plist PUBLIC \u0026quot;-//Apple//DTD PLIST 1.0//EN\u0026quot; \u0026quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026quot;\u0026gt; \u0026lt;plist version=\u0026quot;1.0\u0026quot;\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;items\u0026lt;/key\u0026gt; \u0026lt;array\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;assets\u0026lt;/key\u0026gt; \u0026lt;array\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;kind\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;software-package\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;url\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;http://YOUR_SERVER_URL/YOUR-IPA-FILE.ipa\u0026lt;/string\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/array\u0026gt; \u0026lt;key\u0026gt;metadata\u0026lt;/key\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;bundle-identifier\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;com.yourCompany.productName\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;bundle-version\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;1.0.0\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;kind\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;software\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;title\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;YOUR APP NAME\u0026lt;/string\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/array\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/plist\u0026gt; 修改好 public link、app info 就完成 .plist。\nCreate index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;App install\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h2\u0026gt;builds\u0026lt;/h2\u0026gt; \u0026lt;a href=\u0026#34;itms-services://?action=download-manifest\u0026amp;url=http://YOUR_SERVER_URL/manifest.plist\u0026#34;\u0026gt; App\u0026lt;/a\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 把 url=http://YOUR_SERVER_URL/manifest.plist 替換成 Website manifest.plist。\nHosting using Github  Create a new repository（教學文章） 上傳 manifest.plist、index.html  得到 Github Website index.html就可以安裝 .ipa\n參考文章 iTunes 12.7 移除了 Apps 的選項，我該如何安裝 .ipa 檔案到 iOS 裝置？\n從網路上下載ipa檔並且安裝在iPhone or iPad(Download and install an ipa from url on iOS)\nError when distributing an IPA over the air with dropbox - iOS 7.1\n使用 GitHub 免費製作個人網站\n ","permalink":"https://wenrongdev.com/posts/install-ipa-with-ota/","summary":"前言 由於 iTunes 12.6 之後不提供 .ipa 檔安裝，導致無法提供測試 App，所以有人研究出很多安裝方式。不過這邊主要是介紹 OTA 的方式。\n其他的安裝方式：iTunes 12.7 移除了 Apps 的選項，我該如何安裝 .ipa 檔案到 iOS 裝置？\nUsing OTA 使用 OTA（Over-the-Air）需要有三個檔案 .ipa(ad-Hoc)、.plist、index.html\n.ipa(ad-Hoc) 需要上傳去雲端空間，目前選擇的雲端空間是 Dropbox。\n還需要 Host Website 上傳 .plist、index.html，目前選擇的是 GitHub。\n所以只要使用 Host Website 就可以安裝了。\n參考文章：Error when distributing an IPA over the air with dropbox - iOS 7.1\nUpload .ipa to Dropbox and Get public link   先把輸出好的 .ipa(ad-Hoc) 上傳至 Dropbox 並且設定分享。\n  將分享網址裡的 www.dropbox.com 替換為 dl.","title":"Install IPA With OTA"},{"content":"前言 在 Unity API 中有 Application.systemLanguage 可以取得系統語言。可是 Unity 5.3 用於 iOS 上，只要是裝置為中文語系一律回傳 SystemLanguage.Chinese，無法判別簡 / 繁語系，因此才研究怎麼取得 Windows、Android、iOS 原生語系。\nWindows Platform 利用 GetSystemDefaultLCID 取得本機端語系，再利用 CultureInfo.GetCultureInfo 轉化為本機端語系文化。\n[DllImport(\u0026#34;kernel32.dll\u0026#34;)] 參考文章\nAndroid Platform 直接呼叫原生系統 API 取得。\nprivate static string CurrentAndroidLanguage() { string result = \u0026#34;\u0026#34;; using (AndroidJavaClass cls = new AndroidJavaClass(\u0026#34;java.util.Locale\u0026#34;)) { if (cls != null) { using (AndroidJavaObject locale = cls.CallStatic(\u0026#34;getDefault\u0026#34;)) { if (locale != null) { result = locale.Call(\u0026#34;getLanguage\u0026#34;) + \u0026#34;_\u0026#34; + locale.Call(\u0026#34;getDefault\u0026#34;); Debug.Log(\u0026#34;Android lang: \u0026#34; + result); } else { Debug.Log(\u0026#34;locale null\u0026#34;); } } } else { Debug.Log(\u0026#34;cls null\u0026#34;); } } return result; } 參考文章\niOS Platfrom 製作一個 .mm 文件，內容如下\nchar* cStringCopy(const char* string) { if(string == NULL){ return NULL; } char* newString = (char*)malloc(strlen(string) + 1); strcpy(newString, string); return newString; } extern \u0026#34;C\u0026#34; { const char* CurIOSLang () { NSArray *languages = [NSLocale preferredLanguages]; NSString *CurrentLanguage = [languages objectAtIndex:0]; return cStringCopy([CurrentLanguage UTF8String]); } } 在 C# 寫出 CurIOSLang 的接口\n[DllImport(\u0026#34;__Internal\u0026#34;)] private static extern string CurIOSLang(); 這樣就可以在 Unity 直接呼叫 CurIOSLan 取得 iOS 語系了。\n參考文章\n Github repo ","permalink":"https://wenrongdev.com/posts/unity-5.3-native-system-language/","summary":"前言 在 Unity API 中有 Application.systemLanguage 可以取得系統語言。可是 Unity 5.3 用於 iOS 上，只要是裝置為中文語系一律回傳 SystemLanguage.Chinese，無法判別簡 / 繁語系，因此才研究怎麼取得 Windows、Android、iOS 原生語系。\nWindows Platform 利用 GetSystemDefaultLCID 取得本機端語系，再利用 CultureInfo.GetCultureInfo 轉化為本機端語系文化。\n[DllImport(\u0026#34;kernel32.dll\u0026#34;)] 參考文章\nAndroid Platform 直接呼叫原生系統 API 取得。\nprivate static string CurrentAndroidLanguage() { string result = \u0026#34;\u0026#34;; using (AndroidJavaClass cls = new AndroidJavaClass(\u0026#34;java.util.Locale\u0026#34;)) { if (cls != null) { using (AndroidJavaObject locale = cls.CallStatic(\u0026#34;getDefault\u0026#34;)) { if (locale != null) { result = locale.Call(\u0026#34;getLanguage\u0026#34;) + \u0026#34;_\u0026#34; + locale.Call(\u0026#34;getDefault\u0026#34;); Debug.","title":"Unity 5.3 Native System Language"},{"content":"前言 執行 WebGL 時都會有 Unity Logo \u0026amp; Loading。目前此專案修改 Unity Logo 的部分。\n需要更詳細的內容可以參考官方文件（Unity Document）。\n會比較建議使用 Responsive WebGL Template，省去自己測試修改的麻煩，不過還是需要改 Logo、Icon 的部分。\nSetting Up Your Template   Import Unitypackage\n  Set up Unity Player Setting Edit -\u0026gt; Project Settings -\u0026gt; Player, On the WebGL tab -\u0026gt; Resolution and Presentation -\u0026gt; Selcet LogoTemplates\n  Change Your Logo\nLogo 規格建議不要太大張。\nPath: root/Assets/WebGLTemplates/LogoTemplate/logo.png\n  GitHub repo 參考文章\n ","permalink":"https://wenrongdev.com/posts/unity-webgl-template/","summary":"前言 執行 WebGL 時都會有 Unity Logo \u0026amp; Loading。目前此專案修改 Unity Logo 的部分。\n需要更詳細的內容可以參考官方文件（Unity Document）。\n會比較建議使用 Responsive WebGL Template，省去自己測試修改的麻煩，不過還是需要改 Logo、Icon 的部分。\nSetting Up Your Template   Import Unitypackage\n  Set up Unity Player Setting Edit -\u0026gt; Project Settings -\u0026gt; Player, On the WebGL tab -\u0026gt; Resolution and Presentation -\u0026gt; Selcet LogoTemplates\n  Change Your Logo\nLogo 規格建議不要太大張。\nPath: root/Assets/WebGLTemplates/LogoTemplate/logo.png\n  GitHub repo 參考文章\n ","title":"Unity WebGL Template"},{"content":"前言 此 Script 用於 WebGL RectMask2D 失去作用的簡易修正。\n建議還是先輸出測試確定 RectMask2D 失效再使用此 Script。\n使用方式 直接在 Canvas 物件底下 Add Component FixRectMask2dWebGL 即可。\nScript public class FixRectMask2dWebGL : MonoBehaviour { #if PlatformWebGL  private void Awake() { var items = GetComponentsInChildren\u0026lt;MaskableGraphic\u0026gt;(true); for (int i = 0; i \u0026lt; items.Length; i++) { Material m = items[i].materialForRendering; if (m != null) m.EnableKeyword(\u0026#34;UNITY_UI_CLIP_RECT\u0026#34;); } } #endif }  參考文章\n","permalink":"https://wenrongdev.com/posts/unity-webgl-rectmask2d-does-not-work/","summary":"前言 此 Script 用於 WebGL RectMask2D 失去作用的簡易修正。\n建議還是先輸出測試確定 RectMask2D 失效再使用此 Script。\n使用方式 直接在 Canvas 物件底下 Add Component FixRectMask2dWebGL 即可。\nScript public class FixRectMask2dWebGL : MonoBehaviour { #if PlatformWebGL  private void Awake() { var items = GetComponentsInChildren\u0026lt;MaskableGraphic\u0026gt;(true); for (int i = 0; i \u0026lt; items.Length; i++) { Material m = items[i].materialForRendering; if (m != null) m.EnableKeyword(\u0026#34;UNITY_UI_CLIP_RECT\u0026#34;); } } #endif }  參考文章","title":"Unity WebGL RectMask2D Does Not Work"}]