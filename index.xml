<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Wenrong&#39;s Note</title>
    <link>https://wenrongdev.com/</link>
    <description>Recent content on Wenrong&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 15 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wenrongdev.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>心得 代理人模式</title>
      <link>https://wenrongdev.com/posts/proxy-design-pattern/</link>
      <pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/proxy-design-pattern/</guid>
      <description>主要是針對深入淺出設計模式書籍，提到的代理人模式的心得。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>write something cool&hellip;</p>
<h2 id="主要內容">主要內容</h2>
<p>write something cool&hellip;</p>
<h2 id="小結">小結</h2>
<p>write something cool&hellip;</p>
<h2 id="參考連結">參考連結</h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Wix Examples</title>
      <link>https://wenrongdev.com/posts/wixexamples/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/wixexamples/</guid>
      <description>主要是用來打包程式輸出成 .msi 檔</description>
      <content:encoded><![CDATA[<p>主要是用來打包程式輸出成 <code>.msi</code> 檔（<a href="https://zh.wikipedia.org/zh-tw/Windows_Installer">Windows Installer</a>）。</p>
<p>建議先看完 「<a href="https://ithelp.ithome.com.tw/users/20139206/ironman/3901">30 天 | C# WixToolset + WPF 帥到不行的安裝包 系列</a>」，能夠把 80% 以上的問題解決。</p>
<h3 id="輸出-wix-文件方法">輸出 Wix 文件方法</h3>
<p>先到 <a href="https://github.com/wixtoolset/wix3/releases">WiX Toolset Release</a> 安裝需要的工具。</p>
<p>需要開啟 <a href="https://zh.wikipedia.org/zh-tw/cmd.exe">CMD</a> 且必須要用<code>工作管理員權限</code>打開，之後 cd 到 WiX Toolset 的安裝資料夾。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">C:\Program Files (x86)\WiX Toolset v3.11\bin
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/ovuJCka.png" alt="img_1"  />
</p>
<h4 id="heatexe">heat.exe</h4>
<p>可以掃描目錄中的所有文件和子目錄，並生成 WiX 文件中所需的 Component、Directory、File 和其他元素的定義。</p>
<p>使用下面的參數可以拿到 <code>myKeyIn.wxs</code>。需要把 [MyDemo] 替換成正確的路徑，可以參考我的 <code>Product.wxs</code>。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">heat.exe dir &#34;[PUT_YOUR_PATH]&#34; -dr INSTALLFOLDER -cg ProductComponents -gg -gl -sf -srd -var &#34;[MyDemo]&#34; -out &#34;[PUT_YOUR_OUTPUT_PATH]\myKeyIn.wxs&#34;
</code></pre></div><table>
<thead>
<tr>
<th style="text-align:left">參數名稱</th>
<th style="text-align:left">解釋</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">[PUT_YOUR_PATH]</td>
<td style="text-align:left">需要打包的路徑資料夾</td>
</tr>
<tr>
<td style="text-align:left">[MyDemo]</td>
<td style="text-align:left">WiX 文件中要使用的變數</td>
</tr>
<tr>
<td style="text-align:left">[PUT_YOUR_OUTPUT_PATH]</td>
<td style="text-align:left">WiX 文件的路徑</td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="https://i.imgur.com/SbjBwmv.png" alt="img_2"  />
</p>
<h2 id="wix-productwxs">Wix Product.wxs</h2>
<p><a href="https://raw.githubusercontent.com/Wenrong274/WixExamples/master/WixInstaller/WixToolset/Product.wxs">Product.wxs</a></p>
<h3 id="桌面捷徑">桌面捷徑</h3>
<p>需要注意一些細項設定，如 Guid、執行檔名稱、路徑等。</p>
<pre tabindex="0"><code class="language-wxc" data-lang="wxc">&lt;Directory Id=&quot;DesktopFolder&quot; Name=&quot;Desktop&quot; &gt;
    &lt;Component Id=&quot;DesktopFolderShortcut&quot; Guid=&quot;{94D38478-869E-4CA8-BEA6-7905A7135DB8}&quot;&gt;
        &lt;Shortcut Id=&quot;DesktopShortcut&quot; Directory=&quot;DesktopFolder&quot; Name=&quot;Wix-Hello Unity&quot; Target=&quot;[INSTALLFOLDER]Wix-Hello Unity.exe&quot; WorkingDirectory=&quot;INSTALLFOLDER&quot; Icon=&quot;WixToolsetIcon&quot;&gt;
        &lt;/Shortcut&gt;
        &lt;RegistryValue Root=&quot;HKCU&quot; Key=&quot;Software\WenRongStudio\Wix-Hello Unity&quot; Name=&quot;installed&quot; Type=&quot;integer&quot; Value=&quot;1&quot; KeyPath=&quot;yes&quot;/&gt;
    &lt;/Component&gt;
&lt;/Directory&gt;
</code></pre><h4 id="資料夾權限">資料夾權限</h4>
<p>避免安裝在系統槽時，無法變動檔案，所以必須把資料夾權限打開。</p>
<p>需要注意一些細項設定，如 Guid 等。</p>
<pre tabindex="0"><code class="language-wxc" data-lang="wxc">&lt;Component Id=&quot;InstallationDirectory&quot; Guid='{0D92D4B6-CACE-4556-8CBD-C8C385B22D28}' &gt;
    &lt;CreateFolder Directory=&quot;INSTALLFOLDER&quot;&gt;
        &lt;Permission User=&quot;SYSTEM&quot; GenericAll=&quot;yes&quot;/&gt;
        &lt;Permission User=&quot;EveryOne&quot; GenericAll=&quot;yes&quot; GenericRead=&quot;yes&quot; Read=&quot;yes&quot; ReadAttributes=&quot;yes&quot;  GenericExecute=&quot;yes&quot; TakeOwnership =&quot;yes&quot;  GenericWrite =&quot;yes&quot;    WriteAttributes=&quot;yes&quot; ReadPermission =&quot;yes&quot;   ChangePermission=&quot;yes&quot; /&gt;
        &lt;Permission User=&quot;Users&quot; Domain=&quot;[LOCAL_MACHINE_NAME]&quot; GenericAll=&quot;yes&quot; GenericRead=&quot;yes&quot; Read=&quot;yes&quot; ReadAttributes=&quot;yes&quot;  GenericExecute=&quot;yes&quot; TakeOwnership =&quot;yes&quot;  GenericWrite =&quot;yes&quot;    WriteAttributes=&quot;yes&quot; ReadPermission =&quot;yes&quot;   ChangePermission=&quot;yes&quot;/&gt;
    &lt;/CreateFolder&gt;
&lt;/Component&gt;
</code></pre><h4 id="建立-windows-menu-資料">建立 Windows Menu 資料</h4>
<p>可以 Windows Menu 啟動檔案跟卸載執行檔。</p>
<p>需要注意一些細項設定，如 Guid、執行檔名稱、路徑等。</p>
<pre tabindex="0"><code class="language-wxc" data-lang="wxc">&lt;Directory Id=&quot;ProgramMenuFolder&quot;&gt;
    &lt;Directory Id=&quot;ApplicationProgramsFolder&quot; Name=&quot;Wix-Hello Unity&quot;&gt;
        &lt;Component Id=&quot;ApplicationShortcut&quot; Guid=&quot;{9724BE7E-7132-4978-B806-4B0D1B3DE350}&quot;&gt;
            &lt;Shortcut Id=&quot;ApplicationStartMenuShortcut&quot;
                    Name=&quot;Wix-Hello Unity&quot;
                    Description=&quot;Wix-Hello Unity&quot;
                    Target=&quot;[INSTALLFOLDER]\Wix-Hello Unity.exe&quot;
                    WorkingDirectory=&quot;APPLICATIONROOTDIRECTORY&quot;
                    Icon=&quot;WixToolsetIcon&quot;/&gt;
            &lt;Shortcut Id=&quot;UninstallProduct&quot;
                    Name=&quot;Uninstall&quot;
                    Description=&quot;Uninstalls Wix-Hello Unity&quot;
                    Target=&quot;[System64Folder]msiexec.exe&quot;
                    Arguments=&quot;/x [ProductCode]&quot; /&gt;
            &lt;RemoveFolder Id=&quot;ProgramMenuSubfolder&quot; On=&quot;uninstall&quot;/&gt;
            &lt;RemoveFolder Id=&quot;ApplicationProgramsFolder&quot; On=&quot;uninstall&quot;/&gt;

            &lt;RegistryValue Root=&quot;HKCU&quot; Key=&quot;Software\WenRongStudio\Wix-Hello Unity&quot; Name=&quot;installed&quot; Type=&quot;integer&quot; Value=&quot;1&quot; KeyPath=&quot;yes&quot;/&gt;
        &lt;/Component&gt;
    &lt;/Directory&gt;
&lt;/Directory&gt;
</code></pre><h3 id="githubgithub"><a href="https://github.com/Wenrong274/WixExamples">GitHub</a></h3>
<h3 id="參考文章">參考文章</h3>
<p><a href="https://blog.walterlv.com/post/getting-started-with-wix-toolset-msi-hello-world">用 WiX 制作安装包：创建一个简单的 msi 安装包</a></p>
<p><a href="https://ithelp.ithome.com.tw/users/20139206/ironman/3901">30 天 | C# WixToolset + WPF 帥到不行的安裝包 系列</a></p>
<p><a href="https://wixtoolset.org/docs/v3/howtos/files_and_registry/create_uninstall_shortcut/">Create an Uninstall Shortcut</a></p>
<p><a href="https://wixtoolset.org/docs/v3/howtos/files_and_registry/create_start_menu_shortcut/">Create a Shortcut on the Start Menu</a></p>
<p><a href="https://stackoverflow.com/a/17513551">Removing files when uninstalling WiX</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>QC Cube</title>
      <link>https://wenrongdev.com/portfolios/jtqc/qccube/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/jtqc/qccube/</guid>
      <description>介紹 集合數以百計的互動式動畫，內容涵蓋國高中範圍的自然學科，分為化學、物理、生物、地科四大科。 使用 sLua 製作主選單架構、互動式動畫。 課程內容可以</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/IBSUoFfay-A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="介紹">介紹</h2>
<p>集合數以百計的互動式動畫，內容涵蓋國高中範圍的自然學科，分為化學、物理、生物、地科四大科。</p>
<ul>
<li>
<p>使用 sLua 製作主選單架構、互動式動畫。</p>
</li>
<li>
<p>課程內容可以根據客戶課綱客製化內容。</p>
</li>
<li>
<p>使用 AssetBundle 可以隨時切換、更新課程內容。</p>
</li>
</ul>
<h2 id="連結">連結</h2>
<p><a href="https://jt-qc.com/product-pages?p_id=1">官網介紹</a></p>
<p><a href="https://apps.apple.com/tw/app/qc-cube/id1480811031"><img loading="lazy" src="https://imgur.com/APiZmgH.png" alt="appstore"  />
</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>寶馬曳引機 VR</title>
      <link>https://wenrongdev.com/portfolios/jtqc/tractorvr/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/jtqc/tractorvr/</guid>
      <description>介紹 模擬駕駛曳引機 VR 遊戲，搭配任務目標體驗駕駛模式、詳細觀賞外觀模式。 使用 Unity 搭配 Meta Quest 製作而成。 模擬駕駛手排車 連結 新聞介紹</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/JwodlwHqAhU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="介紹">介紹</h2>
<p>模擬駕駛曳引機 VR 遊戲，搭配任務目標體驗駕駛模式、詳細觀賞外觀模式。</p>
<ul>
<li>使用 Unity 搭配 Meta Quest 製作而成。</li>
<li>模擬駕駛手排車</li>
</ul>
<h2 id="連結">連結</h2>
<p><a href="https://tw.news.yahoo.com/%E5%BD%B0%E5%8C%96%E4%B8%AD%E8%BE%B2%E5%8D%9Avr%E6%9B%B3%E5%BC%95%E6%A9%9F%E6%A8%A1%E6%93%AC%E8%89%99-%E5%85%A8%E5%9C%8B%E9%A6%96%E6%AC%A1%E6%9B%9D%E5%85%89%E5%8A%A0%E7%A2%BC%E9%AB%94%E9%A9%97%E5%A0%B4%E6%AC%A1-110113353.html">新聞介紹</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>糖的科普知識</title>
      <link>https://wenrongdev.com/portfolios/jtqc/sugarfactory/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/jtqc/sugarfactory/</guid>
      <description>介紹 Kinect 體感操作方式體驗製糖過程，最多可以三人遊玩一起完成鍋爐任務。 使用 Unity 搭配 Kinect SDK 製作而成。 支援多人遊玩。 連結 介紹網址</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/inlLMzOoc60" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="介紹">介紹</h2>
<p>Kinect 體感操作方式體驗製糖過程，最多可以三人遊玩一起完成鍋爐任務。</p>
<ul>
<li>使用 Unity 搭配 Kinect SDK 製作而成。</li>
<li>支援多人遊玩。</li>
</ul>
<h2 id="連結">連結</h2>
<p><a href="https://rhs.boch.gov.tw/rhs/plan_listview.aspx?pl=116">介紹網址</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>變動的大地</title>
      <link>https://wenrongdev.com/portfolios/jtqc/elegeoscience/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/jtqc/elegeoscience/</guid>
      <description>介紹 使用 VR 裝置了解台灣各類岩⽯和地形變化，每關關卡有任務目標跟題目作答來加深學習記憶，任務目標有判斷拿起岩石碰撞判斷硬度、呼叫海嘯使海岸侵蝕</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/pWr71RNmNHE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="介紹">介紹</h2>
<p>使用 VR 裝置了解台灣各類岩⽯和地形變化，每關關卡有任務目標跟題目作答來加深學習記憶，任務目標有判斷拿起岩石碰撞判斷硬度、呼叫海嘯使海岸侵蝕、時光槍變化岩石時間等。</p>
<ul>
<li>支援多平台 Windows、Meta Quest 和 XRSpace，並統一各平台的操作行為。</li>
</ul>
<h2 id="連結">連結</h2>
<p><a href="https://moevrar.tku.edu.tw/material_detail.cshtml?id=145">介紹網址</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>雲林好 Young</title>
      <link>https://wenrongdev.com/portfolios/jtqc/yunlinyoung/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/jtqc/yunlinyoung/</guid>
      <description>介紹 以「品德教育」為核心出發，為孩子設計出一系列與品德素養、雲林特產特色、英文、數學等的互動遊戲，提升學習動機。遊戲類型包括圖形辨識、平面辨</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/e3VVoea3EBg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="介紹">介紹</h2>
<p>以「品德教育」為核心出發，為孩子設計出一系列與品德素養、雲林特產特色、英文、數學等的互動遊戲，提升學習動機。遊戲類型包括圖形辨識、平面辨識、打地鼠、大富翁、實境解謎等。</p>
<ul>
<li>使用 AR Foundation 製作 AR、MR 辨識功能</li>
<li>題目內容可以隨時更新</li>
<li>有 7 款不同類型的遊戲</li>
</ul>
<h2 id="連結">連結</h2>
<p><a href="https://apps.apple.com/al/app/%E9%9B%B2%E6%9E%97%E5%A5%BD-young-%E5%93%81%E5%BE%B7%E8%97%8F%E5%AF%B6%E5%9C%96/id1605719988"><img loading="lazy" src="https://imgur.com/APiZmgH.png" alt="appstore"  />
</a></p>
<p><a href="https://play.google.com/store/apps/details?id=tw.gov.yunlin.charactertreasuremap"><img loading="lazy" src="https://imgur.com/GyhUzK3.png" alt="googleplay"  />
</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://wenrongdev.com/portfolios/projectlist/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/portfolios/projectlist/</guid>
      <description>2023 2023/05 - 2023/07 AIR 英語未來城 AppleStore GoolgPlay Youtube 2022 2022/01 - 2022/11 滅蚊大作戰 AppleStore GoolgPlay 介紹網站 2022/08 - 2022/09 寶馬曳引機 VR Youtube 2022/06 - 2022/12 變動的大地 Youtube 介紹網站 2022/06 - 2022/11 密室逃脫 AR : 生化危機 AppleStore GoolgPlay Youtube 介紹網</description>
      <content:encoded><![CDATA[<h2 id="2023">2023</h2>
<dl>
<dt>2023/05 - 2023/07</dt>
<dd>AIR 英語未來城　<a href="https://apps.apple.com/us/app/air-%E8%8B%B1%E8%AA%9E%E6%9C%AA%E4%BE%86%E5%9F%8E/id6450970647">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.YunDongEducation.AirEnglishFutureCity">GoolgPlay</a>　<a href="https://youtu.be/__rgNu0EP08">Youtube</a></dd>
</dl>
<h2 id="2022">2022</h2>
<dl>
<dt>2022/01 - 2022/11</dt>
<dd>滅蚊大作戰　<a href="https://apps.apple.com/us/app/%E6%BB%85%E8%9A%8A%E5%A4%A7%E4%BD%9C%E6%88%B0-endofthemosquito/id1179197223">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.JTQC.EndOfTheMosquito">GoolgPlay</a>　<a href="https://jt-qc.com/product-pages?p_id=34">介紹網站</a></dd>
<dt>2022/08 - 2022/09</dt>
<dd>寶馬曳引機 VR 　<a href="https://www.youtube.com/watch?v=JwodlwHqAhU">Youtube</a></dd>
<dt>2022/06 - 2022/12</dt>
<dd>變動的大地　<a href="https://www.youtube.com/watch?v=pWr71RNmNHE">Youtube</a>　<a href="https://moevrar.tku.edu.tw/material_detail.cshtml?id=145">介紹網站</a></dd>
<dt>2022/06 - 2022/11</dt>
<dd>密室逃脫 AR : 生化危機　<a href="https://apps.apple.com/cn/app/%E5%AF%86%E5%AE%A4%E9%80%83%E8%84%ABar-%E7%94%9F%E5%8C%96%E5%8D%B1%E6%A9%9F/id1471088520">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.JTQC.BioCrisis">GoolgPlay</a>　<a href="">Youtube</a>　<a href="https://jt-qc.com/product-pages?p_id=35">介紹網站</a></dd>
<dt>2022/11 - 2022/12</dt>
<dd>阿拉丁教學平台入口　<a href="https://apps.apple.com/gr/app/%E9%98%BF%E6%8B%89%E4%B8%81-xr%E6%95%99%E5%AD%B8%E5%B9%B3%E5%8F%B0%E5%85%A5%E5%8F%A3/id1475224492">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.GTOrganization.newXRPlatfomMkII">GoolgPlay</a></dd>
<dt>2022/11 - 2023/02</dt>
<dd>新挑戰英語單字王_觸控互動　<a href="https://apps.apple.com/tw/app/%E6%96%B0%E6%8C%91%E6%88%B0%E8%8B%B1%E8%AA%9E%E5%96%AE%E5%AD%97%E7%8E%8B-%E8%A7%B8%E6%8E%A7%E4%BA%92%E5%8B%95/id1474197892">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.GTOrganization.engchallenge">GoolgPlay</a>　<a href="https://jt-qc.com/works-pages?w_id=31">介紹網站</a></dd>
</dl>
<h2 id="2021">2021</h2>
<dl>
<dt>2021/02 - 2023/04</dt>
<dd>康軒翻滾吧圖學　<a href="https://apps.apple.com/tw/app/%E5%BA%B7%E8%BB%92%E7%BF%BB%E6%BB%BE%E5%90%A7%E5%9C%96%E5%AD%B8/id1474588832">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=tw.com.knsh.GC8EE18F5824146BD9EF93B8768FBF733">GoolgPlay</a></dd>
<dt>2021/03 - 2021/05</dt>
<dd>糖的科普知識　<a href="https://www.youtube.com/watch?v=inlLMzOoc60">Youtube</a>　<a href="https://rhs.boch.gov.tw/rhs/plan_listview.aspx?pl=116">介紹網站</a></dd>
<dt>2021/05 - 2021/05</dt>
<dd>蒜頭糖廠歷史　<a href="https://www.youtube.com/watch?v=Rhx6K21m1vQ">Youtube</a>　<a href="https://rhs.boch.gov.tw/rhs/plan_listview.aspx?pl=116">介紹網站</a></dd>
<dt>2021/05 - 2021/08</dt>
<dd>年長者失智預防 環遊世界</dd>
<dt>2021/09 - 2023/07</dt>
<dd>雲林好 Young 　<a href="https://apps.apple.com/al/app/%E9%9B%B2%E6%9E%97%E5%A5%BD-young-%E5%93%81%E5%BE%B7%E8%97%8F%E5%AF%B6%E5%9C%96/id1605719988">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=tw.gov.yunlin.charactertreasuremap">GoolgPlay</a>　<a href="https://youtu.be/e3VVoea3EBg">Youtube</a></dd>
<dt>2021/08 - 2021/11</dt>
<dd>FunPark 玩童書　<a href="https://apps.apple.com/tw/app/funpark-%E7%8E%A9%E7%AB%A5%E6%9B%B8/id1534886979">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.Company.FunPark">GoolgPlay</a></dd>
</dl>
<h2 id="2020">2020</h2>
<dl>
<dt>2020/03 - 2023/07</dt>
<dd>Booster 教学系统　<a href="https://apps.apple.com/tw/app/booster-%E6%95%99%E5%AD%A6%E7%B3%BB%E7%BB%9F/id1480475182">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.Melody.TeachBooster">GoolgPlay</a></dd>
<dt>2020/05 - 2023/07</dt>
<dd>Fingerprints 教學系統　<a href="https://apps.apple.com/tw/app/fingerprints-%E6%95%99%E5%AD%B8%E7%B3%BB%E7%B5%B1/id1383640936">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.FingerPrints">GoolgPlay</a></dd>
<dt>2020/08 - 2020/10</dt>
<dd>鈎 GO 釣手　<a href="https://apps.apple.com/tw/app/%E9%88%8EGO%E9%87%A3%E6%89%8B/id1538385180">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=tw.gov.pingtung.goodfish">GoolgPlay</a>　<a href="https://youtu.be/uPXzoWxgxoo">Youtube</a></dd>
<dt>2020/11 - 2021/05</dt>
<dd>細胞分裂、減數分裂與生物的遺傳　<a href="https://apps.apple.com/us/app/%E7%B4%B0%E8%83%9E%E5%88%86%E8%A3%82-%E6%B8%9B%E6%95%B8%E5%88%86%E8%A3%82%E8%88%87%E7%94%9F%E7%89%A9%E7%9A%84%E9%81%BA%E5%82%B3/id1562301603">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.csmu.biologicalinheritance">GoolgPlay</a></dd>
</dl>
<h2 id="2019">2019</h2>
<dl>
<dt>2019/01 - 2019/11</dt>
<dd>康軒國中小課文輕鬆聽　<a href="https://apps.apple.com/tw/app/%E5%BA%B7%E8%BB%92%E5%9C%8B%E4%B8%AD%E5%B0%8F%E8%AA%B2%E6%96%87%E8%BC%95%E9%AC%86%E8%81%BD/id1480191322">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=tw.com.knsh.GE76CD7FEFDE74CA7A1ED6EC6D252D5D7">GoolgPlay</a></dd>
<dt>2019/04 - 2019/06</dt>
<dd>康軒學習遊戲王　<a href="https://youtu.be/J4M59wBFR3U">Youtube</a></dd>
<dt>2019/08 - 2023/07</dt>
<dd>數學一點也不無聊　<a href="https://youtu.be/6swrBWThjtI">Youtube 1</a>　<a href="https://youtu.be/9AZqCJJGFNw">Youtube 2</a>　<a href="https://jt-qc.com/works-pages?w_id=51">介紹網站</a></dd>
<dt>2019/11 - 2020/12</dt>
<dd>越語致用　<a href="https://youtu.be/crGavyM_Cjs">Youtube</a></dd>
<dt>2019/10 - 2019/11</dt>
<dd>震銲 AR 　<a href="https://play.google.com/store/apps/details?id=com.wda.gov.JhenHanAR">GoolgPlay</a>　<a href="https://jt-qc.com/works-pages?w_id=59">介紹網站</a></dd>
<dt>2019/12 - 2022/12</dt>
<dd>英語村_VR 　<a href="https://apps.apple.com/gr/app/%E8%8B%B1%E8%AA%9E%E6%9D%91-vr/id1474188352">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.GTOrganization.newAviationCityVRapp">GoolgPlay</a></dd>
</dl>
<h2 id="2018">2018</h2>
<dl>
<dt>2018/05 - 2023/07</dt>
<dd>QC Cube 　<a href="https://apps.apple.com/tw/app/qc-cube/id1480811031">AppleStore</a>　<a href="https://youtu.be/uPXzoWxgxoo">Youtube</a></dd>
<dt>2018/05 - 2018/12</dt>
<dd>風華再現千里眼　<a href="https://play.google.com/store/apps/details?id=com.ouorange.Fenghua">GoolgPlay</a></dd>
<dt>2018/06 - 2023/02</dt>
<dd>新尋寶記_AR 　<a href="https://apps.apple.com/us/app/%E6%96%B0%E5%B0%8B%E5%AF%B6%E8%A8%98-ar/id1474197976">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.GTOrganization.XRTreasureMap">GoolgPlay</a>　<a href="https://jt-qc.com/works-pages?w_id=27">介紹網站</a></dd>
<dt>2018/08 - 2023/04</dt>
<dd>新悠遊記_360VR 　<a href="https://apps.apple.com/tw/app/%E6%96%B0%E6%82%A0%E9%81%8A%E8%A8%98-360vr/id1474197874">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.GTOrganization.XRTravels360">GoolgPlay</a>　<a href="https://jt-qc.com/works-pages?w_id=28">介紹網站</a></dd>
</dl>
<h2 id="2017">2017</h2>
<dl>
<dt>2017/03 - 2020/02</dt>
<dd>康軒動課本　<a href="https://youtu.be/rr3BgsDc4BA">Youtube</a>　<a href="https://jt-qc.com/works-pages?w_id=30">介紹網站</a></dd>
<dt>2017/05 - 2018/11</dt>
<dd>VR 妙視界：大地的撼動　<a href="https://apps.apple.com/us/app/vr%E5%A6%99%E8%A6%96%E7%95%8C-%E5%A4%A7%E5%9C%B0%E7%9A%84%E6%92%BC%E5%8B%95/id1247781943">AppleStore</a>　<a href="https://play.google.com/store/apps/details?id=com.JTQC.VR0003">GoolgPlay</a></dd>
<dt>2017/05 - 2018/06</dt>
<dd>VR 妙視界：微太空之旅　<a href="https://www.facebook.com/JTQCDE/posts/379486789313837/?paipv=0&amp;eav=AfbMwPAYhGyCDqtOaD1t8b09DUPMKcgX17RyYcqf9cLKpjW0SmB3t__QNrWEfmnna_8&amp;_rdr">介紹網站</a></dd>
</dl>
<h2 id="2016">2016</h2>
<dl>
<dt>2016/05 - 2017/02</dt>
<dd>台達魔法小學堂能源篇　<a href="https://youtu.be/PH2O5FLfrek">Youtube</a></dd>
<dt>2016/10 - 2017/04</dt>
<dd>台達魔法小學堂之生活用電王　<a href="https://play.google.com/store/apps/details?id=com.Delta.ESSBD.powerAR">GoolgPlay</a></dd>
</dl>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Xcode Command PhaseScriptExecution Failed</title>
      <link>https://wenrongdev.com/posts/xcode_command_phasescriptexecution_failed/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/xcode_command_phasescriptexecution_failed/</guid>
      <description>write something</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在 Windwos 環境使用 Unity 輸出 XCode，之後使用 Mac 測試、上傳，出現了錯誤。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Command PhaseScriptExecution failed with a nonzero exit code
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/AvL0uqn.png" alt="img"  />
</p>
<h2 id="解決方式">解決方式</h2>
<p>因為專案有使用 Cardboard，且 Unity 是使用 2022，才會出現此問題，之前使用 2021 輸出上架都沒問題。</p>
<p>我的解決方法是把專案改成在 MacOS 上輸出就能完美解決此問題。</p>
<h2 id="測試過的方法">測試過的方法</h2>
<p>有測試過的方法，可是對我這次情況沒有效果。</p>
<ul>
<li>升級或安裝 Pod。<a href="https://forum.unity.com/threads/error-on-build.561706/#post-5585278">參考</a></li>
<li>修改 build phases 開啟 For install builds only。<a href="https://stackoverflow.com/questions/73760753/xcode-14-0-command-phasescriptexecution-failed-with-a-nonzero-exit-code">參考</a></li>
<li>修改 Workspace Setting 的 Build System，在 Xcode 14 無法修改。<a href="https://blog.csdn.net/qq_40697071/article/details/99055070">參考</a></li>
</ul>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity2021 Video Player Crush</title>
      <link>https://wenrongdev.com/posts/unity2021-videoplayercrush/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity2021-videoplayercrush/</guid>
      <description>在 Android 11 以上的版本使用 VideoPlayer 呼叫 Stop 時會造成 App Crush。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在 Android 11 以上的版本使用 VideoPlayer 呼叫 <code>Stop();</code> 時會造成 App Crush。</p>
<p>官方論壇討論此問題<a href="https://forum.unity.com/threads/android-crash-when-videoplayer-stop-is-executed.1361863/">文章</a>。</p>
<h2 id="錯誤-log">錯誤 log</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Stack trace:
Error AndroidRuntime signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
Error AndroidRuntime Cause: null pointer dereference
Error AndroidRuntime r0 00000000 r1 00003f06 r2 71303e68 r3 00000002
Error AndroidRuntime r4 0848fed2 r5 e5f9b138 r6 ea0e93e0 r7 00000000
Error AndroidRuntime r8 b5c5bfa8 r9 00000000 r10 b5c5bfe8 r11 00000002
Error AndroidRuntime ip e9e63e58 sp b5c5bf00 lr e9df8263 pc e9d823fa
Error AndroidRuntime
Error AndroidRuntime backtrace:
Error AndroidRuntime #00 pc 000773fa /system/lib/libandroid_runtime.so (BuildId: cb59abe29c72e464af331ce6551ec035)
Error AndroidRuntime #01 pc 00000136 [anon:.bss]
Error AndroidRuntime
Error AndroidRuntime at libandroid_runtime.0x773fa(Native Method)
Error AndroidRuntime at [anon:.0x136(Native Method)
</code></pre></div><h2 id="解決方式">解決方式</h2>
<p>官方在論壇回覆是建議回去 2020 版，之後會修復。因為我使用的專案不方便降版。</p>
<p>我解決的方式 VideoPlayer.Pause()，然後<code>生成</code>一個新的 VideoPlayer 物件，原本舊的 VideoPlayer 物件不要關閉物件、不要刪除物件，不然都會造成 App Crush。</p>
<p>不過最終解決方式還是需要等官方處理結束，可以看這個 bug 什麼時候解決 <a href="https://issuetracker.unity3d.com/issues/android-application-crashes-when-changing-the-source-url-of-a-video-player-in-android">Issue Tracker</a>。</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity ParticleBezierPath</title>
      <link>https://wenrongdev.com/posts/particlebezierpath/</link>
      <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/particlebezierpath/</guid>
      <description>Unity 實作粒子路徑系統。並且使用 Job System 優化效能。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>此篇是優化原本的 <a href="https://wenrongdev.com/posts/unity-particlepath/">Unity ParticlePath</a></p>
<h2 id="簡介">簡介</h2>
<p>有使用 Job System 優化功能。</p>
<p>100000 顆粒子使用路徑功能時，SAMSUNG GALAXY S7 在不使用 Job System FPS 約 8-9 FPS，使用後變成 18-20 FPS，PC 版多使用了 Burst 會從 30 FPS 提升至 100 FPS。</p>
<p>可能因為測試的硬體裝置數據優化有所不同，建議還是實際測試後才決定。</p>
<h2 id="使用方式">使用方式</h2>
<p>可以先使用 demo 場景測試，必須要打開 <code>IsJob</code>，才會啟動 Job System。</p>
<p><img loading="lazy" src="https://imgur.com/lfos4S0.gif" alt="demogif"  />
</p>
<h2 id="githubgithub"><a href="https://github.com/Wenrong274/ParticleBezierPath">GitHub</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Oculus Sample</title>
      <link>https://wenrongdev.com/posts/oculussample/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/oculussample/</guid>
      <description>簡易的 Oculus 功能介紹專案</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>這是簡易的 Oculus 功能介紹專案，是我製作 VR 專案以來經常使用到的操作行為，我把這些操作行為歸類起來。</p>
<p>功能接紹有按鈕、抓取、放置、按壓、等操作行為，目前只要有這些功能就能完整製作 VR 的操作行為。</p>
<h2 id="配置">配置</h2>
<p>需要參考官方文件 <a href="https://developer.oculus.com/documentation/unity/unity-gs-overview/">Get Started with Oculus in Unity</a>，也可以觀看該<a href="https://github.com/Wenrong274/OculusSample">專案配置</a>。</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Deep Link -2</title>
      <link>https://wenrongdev.com/posts/unitydeeplink_2/</link>
      <pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unitydeeplink_2/</guid>
      <description>介紹 Unity Deep Link 呼叫方式</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>deep link 可以用網址來當 link id，類似像手機點開 Youtube 網址時，假如裝置內有 Youtube App 就會自動開啟 App，並且切換至該影片內容。而 deep link 也可以用網址來當 link id 達到這樣的效果。</p>
<p>也可以用來呼叫 app 時，假如該裝置沒有安裝可以直接轉移到 app store 上面讓使用者直接下載該 app。</p>
<h2 id="android">Android</h2>
<p>需要在 <code>AndroidManifest</code> 上寫上 link id，可以根據 <a href="https://developer.android.com/training/app-links/deep-linking">Create Deep Links to App Content</a> 參考詳細的設置方式。</p>
<ul>
<li>url 呼叫方式</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-xml" data-lang="xml"><span style="color:#f92672">&lt;intent-filter&gt;</span>
    <span style="color:#f92672">&lt;action</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.action.VIEW&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;category</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.category.DEFAULT&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;category</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.category.BROWSABLE&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:scheme=</span><span style="color:#e6db74">&#34;http&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:scheme=</span><span style="color:#e6db74">&#34;https&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:host=</span><span style="color:#e6db74">&#34;wenrongdev.com&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:pathPrefix=</span><span style="color:#e6db74">&#34;/unitydeeplink_2&#34;</span><span style="color:#f92672">/&gt;</span>
<span style="color:#f92672">&lt;/intent-filter&gt;</span>
</code></pre></div><p><code>host</code>：網址</p>
<p><code>pathPrefix</code>：節點</p>
<p>可以利用這種方式，app 超連結開啟或者網頁輸入 <code>https://wenrongdev.com/posts/unitydeeplink_2/</code> 時就會自動對應到 App。</p>
<ul>
<li>自訂 id</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-xml" data-lang="xml"><span style="color:#f92672">&lt;intent-filter&gt;</span>
    <span style="color:#f92672">&lt;action</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.action.VIEW&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;category</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.category.DEFAULT&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;category</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.intent.category.BROWSABLE&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:scheme=</span><span style="color:#e6db74">&#34;app&#34;</span> <span style="color:#f92672">/&gt;</span>
    <span style="color:#f92672">&lt;data</span> <span style="color:#a6e22e">android:host=</span><span style="color:#e6db74">&#34;wenrongdev&#34;</span> <span style="color:#f92672">/&gt;</span>
<span style="color:#f92672">&lt;/intent-filter&gt;</span>
</code></pre></div><p>可以利用這種方式，app 超連結開啟或者網頁輸入 <code>app://wenrongdev</code> 時就會自動對應到 App。</p>
<h2 id="ios">iOS</h2>
<p>Unity 設定 link id 的方式在 <a href="https://docs.unity3d.com/Manual/deep-linking-ios.html">Deep linking on iOS</a> 有介紹如何設定，而 Xcode 也能設定，不過建議是在 Unity 中設定非必要不建議額外自己在手動設置，主要是怕輸出時忘記導致功能失效。</p>
<p>Xcode 詳細設定可以參考這邊 <a href="https://medium.com/wolox/ios-deep-linking-url-scheme-vs-universal-links-50abd3802f97">IOS Deep linking: URL Scheme vs Universal Links</a></p>
<p><img loading="lazy" src="https://imgur.com/WIvC4gC.png" alt="img_1"  />
</p>
<p>這樣設定後就會與 Android 一樣的功能，在瀏覽器輸出該 link id 就會自動對應到 app。</p>
<h2 id="其他">其他</h2>
<ul>
<li><a href="https://github.com/WenRongDev/Unity-DeepLink">Github</a></li>
<li><a href="https://wenrongdev.com/posts/unitydeeplink_1/">Unity Deep Link -1</a></li>
</ul>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Deep Link -1</title>
      <link>https://wenrongdev.com/posts/unitydeeplink_1/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unitydeeplink_1/</guid>
      <description>介紹 Unity Deep Link 使用方式</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>DeepLink 是可以直接用網址呼叫 App 的方式之一，以前有提到可以利用 <a href="https://wenrongdev.com/posts/get-android-intent-data-for-unity/">Get Android Intent Data for Unity</a> 這邊文章提到的方式，呼叫 App，不過這只限定 Android，iOS 則還是需要用 Deeplink 的方式呼叫。主要是當時 Unity 版本並不支援 DeepLink，所以只能自己寫原生的，才會有之前的<a href="https://wenrongdev.com/posts/get-android-intent-data-for-unity/">這篇</a>文章，更重要的是，使用之前的呼叫方式是需要某些權限，但目前 Google 也把這些權限關閉，無法正常上架需要自己寫信去解釋才會願意讓你正常上架。所以建議是棄用這種方法改用 Deeplink。</p>
<h2 id="詳細資料">詳細資料</h2>
<ul>
<li>
<p><a href="https://docs.unity3d.com/Manual/deep-linking.html">Unity Deep Link</a></p>
</li>
<li>
<p><a href="https://developer.android.com/training/app-links/deep-linking">Android Deep Link</a></p>
</li>
<li>
<p><a href="https://developer.apple.com/documentation/xcode/allowing-apps-and-websites-to-link-to-your-content">iOS Deep Link</a></p>
</li>
</ul>
<p>建議是一定要把 <a href="https://docs.unity3d.com/Manual/deep-linking.html">Unity Deep Link</a> 看完，才會知道怎麼設定，其餘兩邊則是原生地設定方式，可以參考。</p>
<h2 id="使用方式">使用方式</h2>
<p><a href="https://docs.unity3d.com/Manual/deep-linking.html">Unity Deep link Doc</a></p>
<p>官方也有文件解釋 Deep link 的基礎設定。</p>
<h2 id="script-start">Script Start</h2>
<p>需要再被喚醒 app 的瞬間也就是 Awake 時，先讀取 <code>Application.absoluteURL</code> 才能讀取道 deep link 的資料。<code>Application.deepLinkActivated</code> 部分則是 app 的 deep link feedback。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> Awake()
    {
        Application.deepLinkActivated += OnDeepLinkActivated;
        <span style="color:#66d9ef">if</span> (!<span style="color:#66d9ef">string</span>.IsNullOrEmpty(Application.absoluteURL))
            OnDeepLinkActivated(Application.absoluteURL);
    }
</code></pre></div><h2 id="script-url-arg">Script Url Arg</h2>
<p>拆解 Deep link 夾帶的參數，格式大概與 web 的 url get 類似，可以用這種方式去解析，夾帶的參數。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> OnDeepLinkActivated(<span style="color:#66d9ef">string</span> url)
    {
        <span style="color:#66d9ef">string</span>[] urlArg = url.Split(<span style="color:#e6db74">&#39;?&#39;</span>);
        <span style="color:#66d9ef">string</span>[] args = <span style="color:#66d9ef">new</span> <span style="color:#66d9ef">string</span>[<span style="color:#ae81ff">0</span>];
        <span style="color:#66d9ef">if</span> (urlArg.Length &gt; <span style="color:#ae81ff">1</span>)
        {
            <span style="color:#66d9ef">char</span>[] charSeparators = <span style="color:#66d9ef">new</span> <span style="color:#66d9ef">char</span>[] { <span style="color:#e6db74">&#39;&amp;&#39;</span> };
            args = urlArg[<span style="color:#ae81ff">1</span>].Split(charSeparators, StringSplitOptions.RemoveEmptyEntries);
        }

        <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i = <span style="color:#ae81ff">0</span>; i &lt; args.Length; i++)
        {
            Debug.Log(args[i]);
        }
    }
</code></pre></div><h2 id="其他">其他</h2>
<ul>
<li><a href="https://github.com/WenRongDev/Unity-DeepLink">Github</a></li>
<li><a href="https://wenrongdev.com/posts/unitydeeplink_2/">Unity Deep Link -2</a></li>
</ul>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Text Breaking Space</title>
      <link>https://wenrongdev.com/posts/unitytextbreakingspace/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unitytextbreakingspace/</guid>
      <description>Unity Text 中英混雜字串，導致 Space 字串跳行問題</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>Unity Text 中英混雜導致英文字跳行問題，主要是 Space 字串的問題，可以用 <code>\u00A0</code> 替代 Space。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">readonly</span> <span style="color:#66d9ef">string</span> no_breaking_space = <span style="color:#e6db74">&#34;\u00A0&#34;</span>;

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span> ReplaceSpace(<span style="color:#66d9ef">string</span> context)
{
    <span style="color:#66d9ef">return</span> context.Replace(<span style="color:#e6db74">&#34; &#34;</span>, no_breaking_space);
}
</code></pre></div><p>可以這樣替代全部的 Space。</p>
<h2 id="範例">範例</h2>
<ul>
<li>使用前</li>
</ul>
<p><img loading="lazy" src="https://imgur.com/4dSyVJL.jpg" alt="img_1"  />
</p>
<ul>
<li>使用後</li>
</ul>
<p><img loading="lazy" src="https://imgur.com/GhMA0mV.jpg" alt="img_2"  />
</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Oculus Auto Set Build Setting &amp;&amp; Build</title>
      <link>https://wenrongdev.com/posts/oculusautosetbuildsettingandbuild/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/oculusautosetbuildsettingandbuild/</guid>
      <description>自動設定 Oculus XR 等細項設定，方便用於多平台多操作方式功能。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>之前因為遇到多平台功能，要輸出時各個平台 Player Setting 細項設定皆為不同，會因為某些沒有設定導致輸出時出包，所以才寫了一個自動輸出個平台功能。</p>
<h2 id="xr-setting">XR Setting</h2>
<p>可以利用這段來新增或移除 XR 裡面的 Oculus 勾選。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> SetOculusXRLoader(BuildTargetGroup buildTarget, <span style="color:#66d9ef">bool</span> active)
{
    XRGeneralSettingsPerBuildTarget buildTargetSettings = <span style="color:#66d9ef">null</span>;
    EditorBuildSettings.TryGetConfigObject(XRGeneralSettings.k_SettingsKey, <span style="color:#66d9ef">out</span> buildTargetSettings);
    XRGeneralSettings settings = buildTargetSettings.SettingsForBuildTarget(buildTarget);

    <span style="color:#66d9ef">if</span> (active)
        XRPackageMetadataStore.AssignLoader(settings.Manager, <span style="color:#e6db74">&#34;Unity.XR.Oculus.OculusLoader&#34;</span>, buildTarget);
    <span style="color:#66d9ef">else</span>
        XRPackageMetadataStore.RemoveLoader(settings.Manager, <span style="color:#e6db74">&#34;Unity.XR.Oculus.OculusLoader&#34;</span>, buildTarget);
}
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/l0ovOpl.png" alt="img_1"  />
</p>
<h2 id="build">Build</h2>
<p>利用這段自動輸出，options 可以設定 <code>BuildOptions.None</code>、<code>BuildOptions.AutoRunPlayer</code>，一般的 Build 和 Build and Run。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildRelease(<span style="color:#66d9ef">string</span> Path, BuildTarget Target, BuildOptions options)
{
    Console.Clear();
    BuildPlayerOptions playerOptions = GetBuildPlayer(Path, Target, options);
    BuildReport Report = BuildPipeline.BuildPlayer(playerOptions);
    EditorUtility.RevealInFinder(Path);
    Debug.Log(<span style="color:#66d9ef">string</span>.Format(<span style="color:#e6db74">&#34;{0} Build completed with a result of &#39;{1}&#39; &#34;</span>, Application.platform, Report.summary.result.ToString()));
}

<span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> BuildPlayerOptions GetBuildPlayer(<span style="color:#66d9ef">string</span> path, BuildTarget Target, BuildOptions options)
{
    <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> BuildPlayerOptions()
    {
        scenes = EnabledScenePaths,
        locationPathName = path,
        target = Target,
        options = options
    };
}
</code></pre></div><h2 id="完整-script">完整 Script</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">SampleBuildRelease</span>
{
    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span> AppName =&gt; PlayerSettings.productName;

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span> Version =&gt; Application.version.Replace(<span style="color:#e6db74">&#34;.&#34;</span>, <span style="color:#e6db74">&#34;&#34;</span>);

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span> BuildFolder
    {
        <span style="color:#66d9ef">get</span> { <span style="color:#66d9ef">return</span> Directory.GetParent(Application.dataPath).FullName.Replace(<span style="color:#e6db74">&#39;\\&#39;</span>, <span style="color:#e6db74">&#39;/&#39;</span>) + <span style="color:#e6db74">&#34;/Build&#34;</span>; }
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span>[] EnabledScenePaths =&gt; EditorBuildSettings.scenes
        .Where((scene) =&gt; scene.enabled)
        .Select((scene) =&gt; scene.path)
        .ToArray();
<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [MenuItem(&#34;Builds/Build/Oculus&#34;)]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> Build_Oculus()
    {
        <span style="color:#66d9ef">string</span> path = Path.Combine(BuildFolder, <span style="color:#e6db74">&#34;Oculus&#34;</span>, <span style="color:#e6db74">$&#34;Oculus_{AppName}_Ver{Version}.apk&#34;</span>);
        BuildReleaseOculus(path, BuildOptions.None, <span style="color:#66d9ef">true</span>);
    }
<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [MenuItem(&#34;Builds/Build And Run/Oculus&#34;)]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildAndRun_Oculus()
    {
        <span style="color:#66d9ef">string</span> path = Path.Combine(BuildFolder, <span style="color:#e6db74">&#34;Oculus&#34;</span>, <span style="color:#e6db74">$&#34;Oculus_{AppName}_Ver{Version}.apk&#34;</span>);
        BuildReleaseOculus(path, BuildOptions.AutoRunPlayer, <span style="color:#66d9ef">true</span>);
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildReleaseOculus(<span style="color:#66d9ef">string</span> path, BuildOptions buildOptions, <span style="color:#66d9ef">bool</span> AddXR)
    {
        SetOculusXRLoader(BuildTargetGroup.Android, AddXR);
        BuildRelease(path, BuildTarget.Android, buildOptions);
    }
<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [MenuItem(&#34;Builds/Build/Windows&#34;)]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> Build_Windows()
    {
        BuildReleaseWindows(BuildOptions.None);
    }
<span style="color:#a6e22e">
</span><span style="color:#a6e22e">    [MenuItem(&#34;Builds/Build And Run/Windows&#34;)]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildAndRun_Windows()
    {
        BuildReleaseWindows(BuildOptions.AutoRunPlayer);
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildReleaseWindows(BuildOptions buildOptions)
    {
        <span style="color:#66d9ef">string</span> folder = Path.Combine(BuildFolder, <span style="color:#e6db74">$&#34;{BuildTarget.StandaloneWindows}&#34;</span>, <span style="color:#e6db74">$&#34;Windows_{AppName}_Ver{Version}&#34;</span>);
        <span style="color:#66d9ef">string</span> path = Path.Combine(folder, <span style="color:#e6db74">$&#34;{AppName}.exe&#34;</span>);
        SetOculusXRLoader(BuildTargetGroup.Standalone, <span style="color:#66d9ef">false</span>);
        BuildRelease(path, BuildTarget.StandaloneWindows, buildOptions);
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> SetOculusXRLoader(BuildTargetGroup buildTarget, <span style="color:#66d9ef">bool</span> active)
    {
        XRGeneralSettingsPerBuildTarget buildTargetSettings = <span style="color:#66d9ef">null</span>;
        EditorBuildSettings.TryGetConfigObject(XRGeneralSettings.k_SettingsKey, <span style="color:#66d9ef">out</span> buildTargetSettings);
        XRGeneralSettings settings = buildTargetSettings.SettingsForBuildTarget(buildTarget);

        <span style="color:#66d9ef">if</span> (active)
            XRPackageMetadataStore.AssignLoader(settings.Manager, <span style="color:#e6db74">&#34;Unity.XR.Oculus.OculusLoader&#34;</span>, buildTarget);
        <span style="color:#66d9ef">else</span>
            XRPackageMetadataStore.RemoveLoader(settings.Manager, <span style="color:#e6db74">&#34;Unity.XR.Oculus.OculusLoader&#34;</span>, buildTarget);
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> BuildRelease(<span style="color:#66d9ef">string</span> Path, BuildTarget Target, BuildOptions options)
    {
        Console.Clear();
        BuildPlayerOptions playerOptions = GetBuildPlayer(Path, Target, options);
        BuildReport Report = BuildPipeline.BuildPlayer(playerOptions);
        EditorUtility.RevealInFinder(Path);
        Debug.Log(<span style="color:#66d9ef">string</span>.Format(<span style="color:#e6db74">&#34;{0} Build completed with a result of &#39;{1}&#39; &#34;</span>, Application.platform, Report.summary.result.ToString()));
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> BuildPlayerOptions GetBuildPlayer(<span style="color:#66d9ef">string</span> path, BuildTarget Target, BuildOptions options)
    {
        <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> BuildPlayerOptions()
        {
            scenes = EnabledScenePaths,
            locationPathName = path,
            target = Target,
            options = options
        };
    }
}
</code></pre></div><hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Project Structure</title>
      <link>https://wenrongdev.com/posts/unit-unity-projectstructure/</link>
      <pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unit-unity-projectstructure/</guid>
      <description>自動建立簡易專案資料夾結構</description>
      <content:encoded><![CDATA[<h2 id="unity-project-structure">Unity Project Structure</h2>
<p>主要是建立一個自動建立簡易專案資料夾結構。</p>
<p>此參考 <a href="https://github.com/dkoprowski/UnityProjectTreeGenerator">UnityProjectTreeGenerator</a> 方法建立資料夾，</p>
<h3 id="使用方式">使用方式</h3>
<p><code>Tools &gt; Generate Project Structure</code></p>
<p>必須要設定 Root Name 才能點擊 <code>Create Structure</code></p>
<p><img loading="lazy" src="https://imgur.com/iBAEGNO.png" alt="img_1"  />
</p>
<h3 id="資料夾結構">資料夾結構</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">|- Assets
    |- Project Name /// 自己設定
        |- 00_Art
        |   |- 00_Profabs
        |   |   |- Models
        |   |   |- UI
        |   |- 01_Shaders
        |   |   |- UI_Shaders
        |   |- 02_Timeline
        |   |- 03_Models
        |   |   |- Example_Model
        |   |   |   |- 3D
        |   |   |   |- Animation
        |   |   |   |- Textures
        |   |   |- Example_Effect
        |   |       |- Textures
        |   |- 04_Scenes
        |   |- 05_UI
        |   |   |- Textures
        |   |   |- Effect
        |   |       |- Textures
        |   |       |- Animation
        |   |       |- Material
        |   |- 07_Audio
        |   |- 08_Video
        |- 01_Program
           |- 00_Scenes
           |- 01_Scripts
           |- 02_Tests
           |- 03_Prefabs
           |- 05_UI
</code></pre></div><h2 id="githubgithub"><a href="https://github.com/Wenrong274/Unity-ProjectStructure">Github</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Open Shader For VSCode</title>
      <link>https://wenrongdev.com/posts/openshaderforvscode/</link>
      <pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/openshaderforvscode/</guid>
      <description>自動對應 Shader 檔案使用 VSCode 開啟</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>針對 Unity Shader 檔案打開時，使用 VSCode 開啟而不是 Visual Studio，假如預設是 VSCode 則無需使用這功能。</p>
<p>會寫這功能是平常寫 C# 都是習慣使用 Visual Studio，而 Visual Studio 好像沒有針對 Unity Shaderlab 的關鍵字，而 VSCode 則有 <a href="https://marketplace.visualstudio.com/items?itemName=amlovey.shaderlabvscodefree">ShaderlabVSCode(Free)</a>，也因此這樣選擇使用 VSCode。</p>
<p>因為平常開發時都是使用 Visual Studio，想開啟 Shader 時可以直接使用 VSCode 編輯，因此才參考 <a href="https://blog.csdn.net/weixin_44293055/article/details/120340635">Sublime Text &amp; Unity Shader</a>，把 Sublime Text 改成使用 VSCode。</p>
<h2 id="環境變數">環境變數</h2>
<p>需要注意<code>環境變數</code>裡的使用者變數的 <code>Path</code> 需要有 VSCode 的路徑</p>
<p><img loading="lazy" src="https://imgur.com/MZN9Wgs.jpg" alt="env_1"  />
</p>
<p>也可以使用 CMD 測試有無環境變數</p>
<p><img loading="lazy" src="https://imgur.com/ME4qXZs.jpg" alt="env_2"  />
</p>
<h2 id="vscode-cli-args">VSCode CLI Args</h2>
<p>根據 Unity 開啟 VSCode Args，可以使用 <code>Process</code> 填寫對應路徑就可以了。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#34;$(ProjectPath)&#34; -g &#34;$(File)&#34;:$(Line):$(Column)
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">startInfo.Arguments = <span style="color:#e6db74">$&#34;{projectPath} -g {fileName}&#34;</span>;
</code></pre></div><h3 id="script">Script</h3>
<p>詳細的方法可以參考 <a href="https://blog.csdn.net/weixin_44293055/article/details/120340635">Sublime Text &amp; Unity Shader</a>。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">OpenShaderForVSCodeEditor</span>
{
<span style="color:#a6e22e">    [UnityEditor.Callbacks.OnOpenAsset(0)]</span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">bool</span> CallbackShader(<span style="color:#66d9ef">int</span> instanceID, <span style="color:#66d9ef">int</span> line)
    {
        <span style="color:#66d9ef">string</span> projectPath = Directory.GetParent(Application.dataPath).ToString();
        <span style="color:#66d9ef">string</span> strFilePath = AssetDatabase.GetAssetPath(EditorUtility.InstanceIDToObject(instanceID));
        <span style="color:#66d9ef">string</span> fileName = projectPath + <span style="color:#e6db74">&#34;/&#34;</span> + strFilePath;
        <span style="color:#66d9ef">if</span> (fileName.EndsWith(<span style="color:#e6db74">&#34;.shader&#34;</span>))
        {
            <span style="color:#66d9ef">var</span> envUser = Environment.GetEnvironmentVariables(EnvironmentVariableTarget.User);
            <span style="color:#66d9ef">var</span> envPaths = envUser[<span style="color:#e6db74">&#34;Path&#34;</span>].ToString().Split(<span style="color:#e6db74">&#34;;&#34;</span>);
            <span style="color:#66d9ef">string</span> vscodePath = <span style="color:#66d9ef">string</span>.Empty;
            <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i = <span style="color:#ae81ff">0</span>; i &lt; envPaths.Length; i++)
            {
                <span style="color:#66d9ef">var</span> path = Path.Combine(envPaths[i], <span style="color:#e6db74">&#34;code&#34;</span>);
                <span style="color:#66d9ef">if</span> (File.Exists(path))
                {
                    vscodePath = path;
                    <span style="color:#66d9ef">break</span>;
                }
            }
            <span style="color:#66d9ef">if</span> (!<span style="color:#66d9ef">string</span>.IsNullOrEmpty(vscodePath))
            {
                Process process = <span style="color:#66d9ef">new</span> Process();
                ProcessStartInfo startInfo = <span style="color:#66d9ef">new</span> ProcessStartInfo();
                startInfo.WindowStyle = ProcessWindowStyle.Hidden;
                startInfo.FileName = vscodePath;
                <span style="color:#75715e">///vscode args &#34;$(ProjectPath)&#34; -g &#34;$(File)&#34;:$(Line):$(Column)
</span><span style="color:#75715e"></span>                startInfo.Arguments = <span style="color:#e6db74">$&#34;{projectPath} -g {fileName}&#34;</span>;
                process.StartInfo = startInfo;
                process.Start();
                <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">true</span>;
            }
            <span style="color:#66d9ef">else</span>
            {
                UnityEngine.Debug.Log(<span style="color:#e6db74">&#34;Not Found Enviroment Variable &#39;VSCode_Path&#39;.&#34;</span>);
                <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">false</span>;
            }
        }
        <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">false</span>;
    }
}
</code></pre></div><h2 id="githubgithub"><a href="https://github.com/Wenrong274/OpenShaderForVSCode">GitHub</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Addressable Load Assets</title>
      <link>https://wenrongdev.com/posts/unity-addressable_load_assets/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-addressable_load_assets/</guid>
      <description>介紹 Unity Addressable 讀取、生成、釋放方式</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>介紹我使用 Addressable 的讀取、生成、釋放方式。</p>
<p>詳細設定還是可以先觀看<a href="https://docs.unity3d.com/Packages/com.unity.addressables@1.3/manual/MemoryManagement.html">官方文件</a>。</p>
<h2 id="event-viewer">Event Viewer</h2>
<p><img loading="lazy" src="https://imgur.com/ohiBIeL.jpg" alt="img-1"  />
</p>
<p>可以利用 Event Viewer 在 Editor Runtime 時，隨時監控記憶體使用情況。就可以很明顯的發現，那些東西是忘記釋放掉的，或者不需要釋放的。</p>
<h2 id="load-asset">Load Asset</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator InstantiateAsset(<span style="color:#66d9ef">string</span> asset)
{
    AsyncOperationHandle&lt;GameObject&gt; <span style="color:#66d9ef">async</span> = asset.LoadAssetAsync&lt;GameObject&gt;();
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    GameObject go = Instantiate(<span style="color:#66d9ef">async</span>.Result);
}

IEnumerator InstantiateAssets(<span style="color:#66d9ef">string</span> label)
{
    AsyncOperationHandle&lt;IList&lt;GameObject&gt;&gt; <span style="color:#66d9ef">async</span> = Addressables.LoadAssetsAsync&lt;GameObject&gt;(label, <span style="color:#66d9ef">null</span>);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i = <span style="color:#ae81ff">0</span>; i &lt; <span style="color:#66d9ef">async</span>.Result.Count; i++)
        GameObject go = Instantiate(<span style="color:#66d9ef">async</span>.Result[i]);
}

IEnumerator InstantiateAsset(AssetReference asset)
{
    AsyncOperationHandle&lt;GameObject&gt; <span style="color:#66d9ef">async</span> = asset.LoadAssetAsync&lt;GameObject&gt;();
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    GameObject go = Instantiate(<span style="color:#66d9ef">async</span>.Result);
}
</code></pre></div><p>可以利用這三種方式讀取 Asset，並且把物件生成出來，當然我還是最推薦使用 AssetReference，除非有什麼特殊需求要使用字串，不然我不會換成其他方式。</p>
<h2 id="release-asset">Release Asset</h2>
<p>釋放掉 Asset 也記得要把物件<code>刪除</code>，不然場上會遺留破圖的物件。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> ReleaseAsset(AsyncOperationHandle&lt;T&gt; <span style="color:#66d9ef">async</span>)
{
    Addressables.Release(<span style="color:#66d9ef">async</span>);
}

<span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> ReleaseAsset(T asset)
{
    Addressables.Release(asset);
}

<span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> ReleaseAsset(AssetReference asset)
{
    asset.ReleaseAsset();
}
</code></pre></div><p>可以利用生成的物件或者 Load asset 的 Async 釋放，假如是使用 AssetReference Load Asset，也可以使用這個方式釋放。</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Addressable Download Assets</title>
      <link>https://wenrongdev.com/posts/unity-addressable_download_assets/</link>
      <pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-addressable_download_assets/</guid>
      <description>介紹 Unity Addressable 多個下載方式</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在前一篇 <a href="../unity-addressable">Unity Addressable</a> 介紹了簡易使用的方式，此篇是介紹下載 Asset 方法。</p>
<p>目前我個人使用過的方式有 Name、Label、AssetReference、Array AssetReference 的方式。</p>
<h2 id="addressablesloadassetasync">Addressables.LoadAssetAsync</h2>
<p>官方範例提供的下載方式 <a href="https://docs.unity3d.com/Packages/com.unity.addressables@1.15/manual/LoadingAddressableAssets.html">Addressables.LoadAsset(s)Async</a>，雖然這個是要把 Asset 讀取出來，其實他也有下載功能</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">    Addressables.LoadAssetAsync&lt;GameObject&gt;(asset);
</code></pre></div><p>我是很少使用這種方式下載或更新 Asset，主因是我個人認為 Addressables.LoadAssetAsync 是讀取物件而不是更新物件的功能，所以我在需要更新時不會使用它。</p>
<h2 id="update-addressable-name-addressable-label">Update Addressable Name/ Addressable Label</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator UpdateAsset(<span style="color:#66d9ef">string</span> asset)
{
    <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(asset, <span style="color:#66d9ef">false</span>);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> downloadAsync;
    Addressables.Release(downloadAsync);
}
</code></pre></div><p>這個是下載 <code>Addressable Name</code> 或 <code>Label</code>的方法，可以利用 Label 下載多個不同 Group 的 Asset。</p>
<p><img loading="lazy" src="https://imgur.com/aPKLTt3.jpg" alt="img-1"  />
</p>
<p><code>Addressable Name</code>、<code>Label</code> 是無法利用 Hotfix 的方式產生，所以是要先創好需要的。若假如需要新的 Addressable Name、Label 是必須要<code>重新輸出</code> App 才會更新。</p>
<p><img loading="lazy" src="https://imgur.com/2j7oGN0.jpg" alt="img-2"  />
</p>
<h2 id="update-asset-reference">Update Asset Reference</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator UpdateAsset(AssetReference asset)
{
    <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(asset, <span style="color:#66d9ef">false</span>);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> downloadAsync;
    Addressables.Release(downloadAsync);
}
</code></pre></div><p><a href="https://docs.unity3d.com/Packages/com.unity.addressables@0.4/api/UnityEngine.AddressableAssets.AssetReference.html">AssetReference</a> 的用法是我最推薦的下載方式，可以很明顯的知道更新物件，不會因為打錯文字導致更新失敗，而且也可以利用這個方式組合物件，讓更新的內容比較簡單方式處理。</p>
<p>例如用一個物件或場景夾帶了多個不同的需要更新的物件，缺點就是這包 pack 輸出會過大，可能需要把每個物件獨立分成多個 AssetReference，利用系統特性夾帶物件變小。不過要是不喜歡這種方式可以看 <a href="#update-multiple-asset-references">Update Multiple Asset References</a>。</p>
<p>不過 AssetReference 最方便還是使用它來生成、釋放、等等，才是最好用的方式。</p>
<h2 id="update-multiple-asset-references">Update Multiple Asset References</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator DonwloadMultipleAssets(AssetReference[] assets)
{
    <span style="color:#66d9ef">var</span> assetKeys = assets.Cast&lt;AssetReference&gt;();
    <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(assetKeys, Addressables.MergeMode.Union);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> downloadAsync;
    Addressables.Release(downloadAsync);
}
</code></pre></div><p>多個 AssetReference 更新的方式，然後可以一起更新。可以完成一個簡單的多個物件更新，不用利用 Label、整合包、等方式更新。</p>
<h2 id="取得下載容量大小方法">取得下載容量大小方法</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator CheckSizeAsync(<span style="color:#66d9ef">string</span> asset)
{
    <span style="color:#66d9ef">var</span> <span style="color:#66d9ef">async</span> = Addressables.GetDownloadSizeAsync(asset);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    <span style="color:#66d9ef">if</span> (<span style="color:#66d9ef">async</span>.Status == AsyncOperationStatus.Succeeded)
    {
        <span style="color:#66d9ef">float</span> size = Mathf.Round((<span style="color:#66d9ef">float</span>)<span style="color:#66d9ef">async</span>.Result / <span style="color:#ae81ff">1024</span> / <span style="color:#ae81ff">1024</span> * <span style="color:#ae81ff">1000</span>) / <span style="color:#ae81ff">1000</span>;
        Debug.Log(<span style="color:#e6db74">$&#34;Total {size} MB&#34;</span>);
    }
    Addressables.Release(<span style="color:#66d9ef">async</span>);
}
</code></pre></div><h2 id="更新進度條寫法">更新進度條寫法</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">IEnumerator UpdateAsset(AssetReference asset)
{
    <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(asset, <span style="color:#66d9ef">false</span>);
    <span style="color:#66d9ef">while</span> (!downloadAsync.IsDone)
    {
        <span style="color:#66d9ef">float</span> percent = downloadAsync.PercentComplete;
        Debug.Log(<span style="color:#e6db74">$&#34;{asset}: {downloadAsync.PercentComplete * 100} %&#34;</span>);
        <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> WaitForEndOfFrame();
    }
    Addressables.Release(downloadAsync);
}
</code></pre></div><hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Android Build Failed Build tools 3X.0.0 Bug</title>
      <link>https://wenrongdev.com/posts/unity-android_failed_buildtoolsbug/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-android_failed_buildtoolsbug/</guid>
      <description>Fix Installed Build Tools revision 3X.0.0 is corrupted.</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>輸出 Apk 遇到的錯誤</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Fix Installed Build Tools revision 3X.0.0 is corrupted.
</code></pre></div><p><img loading="lazy" src="https://imgur.com/CziTHbS.jpg" alt="img_1"  />
</p>
<h2 id="修改方式">修改方式</h2>
<h3 id="修改-d8bat">修改 d8.bat</h3>
<p>檔案路徑 <code>&lt;Android SDK root&gt;\build-tools\3X.0.0</code></p>
<p><img loading="lazy" src="https://imgur.com/YwqG9ek.jpg" alt="simg_1"  />
</p>
<p>將 <code>d8.bat</code> 改為 <code>dx.bat</code>。</p>
<h3 id="修改-d8jar">修改 d8.jar</h3>
<p>檔案路徑 <code>&lt;Android SDK root&gt;\build-tools\3X.0.0\lib</code></p>
<p><img loading="lazy" src="https://imgur.com/sLwOhQx.jpg" alt="simg_2"  />
</p>
<p>將 <code>d8.jar</code> 改為 <code>dx.jar</code>。</p>
<p>就完成修改。</p>
<h2 id="參考連結">參考連結</h2>
<p><a href="https://stackoverflow.com/a/68430992">Android Studio error &ldquo;Installed Build Tools revision 31.0.0 is corrupted&rdquo;</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Blog 心得（3）</title>
      <link>https://wenrongdev.com/posts/reflection-blog-3/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/reflection-blog-3/</guid>
      <description>使用 Hugo 心得，並且使用 PaperMod 當主題時遇到的問題。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>此篇在講如何使用 Hugo 在 Github 上自架 Blog。</p>
<h3 id="安裝-hugo">安裝 Hugo</h3>
<p>關於安裝的部分可以參考這些文章</p>
<ul>
<li><a href="https://gohugo.io/getting-started/quick-start/">Quick Start</a></li>
<li><a href="https://medium.com/@chswei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40">GitHub 部署 Hugo 靜態網站</a></li>
<li><a href="https://jimmylin212.github.io/post/0001_create_hugo_and_deploy_on-github_page/">使用 Hugo 建立靜態網站，並部署在 Github Page</a></li>
<li><a href="https://ithelp.ithome.com.tw/users/20106430/ironman/3613">Hugo 貼身打造個人部落格 系列</a></li>
</ul>
<p>與文章不同的地方主題我是選擇 <a href="https://github.com/adityatelange/hugo-PaperMod">PaperMod</a>，由於需要設定 <strong>config.yml</strong>，建議先參考 <a href="https://github.com/adityatelange/hugo-PaperMod/wiki/Installation">PaperMod-Installation</a>。</p>
<p>想要完整的設定或理解 PaperMod，最好是完整的看完 <a href="https://github.com/adityatelange/hugo-PaperMod">PaperMod</a> 的 repo，有不知道的問題可以在 <a href="https://github.com/adityatelange/hugo-PaperMod/issues">Issues</a> 或者 <a href="https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs">FAQs</a> 搜尋看看，會比 google 搜尋來得快。</p>
<h3 id="papermod">PaperMod</h3>
<p>由於 PaperMod 推薦使用 <code>config.yml</code>，因此推薦把原本的 <code>config.toml</code> 刪除。並且去複製官方提供的 <a href="https://github.com/adityatelange/hugo-PaperMod/wiki/Installation#sample-configyml">config.yml</a>。</p>
<h3 id="configyml">config.yml</h3>
<h4 id="search-post">Search Post</h4>
<p>先在 config menu main 新增一個 Search 頁面</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">menu:
    main:
        - identifier: archives
          name: Archives
          url: /archives/
          weight: 5
        - identifier: tags
          name: Tags
          url: /tags/
          weight: 10
        - identifier: search
          name: Search
          url: /search/
          weight: 20
</code></pre></div><p>且在最底下此內容。（<a href="https://github.com/adityatelange/hugo-PaperMod/wiki/Features#search-page">參考文件</a>）</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">outputs:
    home:
        - HTML
        - RSS
        - JSON # is necessary
</code></pre></div><p>最後在專案的 <code>content</code> 底下新增 <code>search.md</code>，即可完成功能。（<a href="https://github.com/adityatelange/hugo-PaperMod/wiki/Features#search-page">參考文件</a>）</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-markdown" data-lang="markdown">---
title: &#34;Search&#34; # in any language you want
layout: &#34;search&#34; # is necessary
# url: &#34;/archive&#34;
# description: &#34;Description for Search&#34;
summary: &#34;search&#34;
placeholder: &#34;placeholder text in search input box&#34;
---
</code></pre></div><h4 id="comments">Comments</h4>
<p>此功能是參考 <a href="https://ithelp.ithome.com.tw/articles/10248312">Day 20. Hugo Comments System</a> 文章製作出來的。</p>
<h2 id="github-action">Github Action</h2>
<p>有使用 Custom domain 的話，且 workflows 沒有設定 domain 的話，會造成每次更新文章時，都會清掉 Custom domain，變回原本的 github.io。</p>
<h3 id="github-pages-workflowyml">GitHub Pages workflow.yml</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yml" data-lang="yml"><span style="color:#f92672">name</span>: <span style="color:#ae81ff">GitHub Pages</span>

<span style="color:#f92672">on</span>:
  <span style="color:#f92672">push</span>:
    <span style="color:#f92672">branches</span>:
      - <span style="color:#ae81ff">main</span> <span style="color:#75715e"># Set a branch to deploy</span>
  <span style="color:#f92672">pull_request</span>:

<span style="color:#f92672">jobs</span>:
  <span style="color:#f92672">deploy</span>:
    <span style="color:#f92672">runs-on</span>: <span style="color:#ae81ff">ubuntu-20.04</span>
    <span style="color:#f92672">concurrency</span>:
      <span style="color:#f92672">group</span>: <span style="color:#ae81ff">${{ github.workflow }}-${{ github.ref }}</span>
    <span style="color:#f92672">steps</span>:
      - <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/checkout@v2</span>
        <span style="color:#f92672">with</span>:
          <span style="color:#f92672">submodules</span>: <span style="color:#66d9ef">true</span> <span style="color:#75715e"># Fetch Hugo themes (true OR recursive)</span>
          <span style="color:#f92672">fetch-depth</span>: <span style="color:#ae81ff">0</span> <span style="color:#75715e"># Fetch all history for .GitInfo and .Lastmod</span>

      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Setup Hugo</span>
        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">peaceiris/actions-hugo@v2</span>
        <span style="color:#f92672">with</span>:
          <span style="color:#f92672">hugo-version</span>: <span style="color:#e6db74">&#34;0.91.2&#34;</span>
          <span style="color:#75715e"># extended: true</span>

      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Build</span>
        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">hugo --minify</span>

      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Deploy</span>
        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">peaceiris/actions-gh-pages@v3</span>
        <span style="color:#f92672">if</span>: <span style="color:#ae81ff">${{ github.ref == &#39;refs/heads/main&#39; }}</span>
        <span style="color:#f92672">with</span>:
          <span style="color:#f92672">github_token</span>: <span style="color:#ae81ff">${{ secrets.HUGO_DEPLOY_TOKEN  }}</span>
          <span style="color:#f92672">PUBLISH_BRANCH</span>: <span style="color:#ae81ff">gh-pages</span> <span style="color:#75715e"># 推送到 gh-pages 分支</span>
          <span style="color:#f92672">commit_message</span>: <span style="color:#ae81ff">${{ github.event.head_commit.message }}</span>
          <span style="color:#f92672">publish_dir</span>: <span style="color:#ae81ff">./public</span>
          <span style="color:#f92672">cname</span>: <span style="color:#ae81ff">wenrongdev.com</span>
</code></pre></div><p>只需要新增或替換掉 <code>cname</code> 後面為 domain 即可。</p>
<h2 id="結論">結論</h2>
<p>Hugo 或 PaperMod 我都處於摸索階段。</p>
<p>這次架起來的感覺各方面都不錯，不管是讀取 Blog 速度、支援 Markdown、架設 Github 上且保留原始檔，到目前為止沒有明顯的缺點。</p>
<p>目前最大問題就是 <code>SEO</code>，這是我完全沒有接觸過的。問題在於 Google 搜尋不到我的 Blog，所以這是之後要研究的部分。</p>
<hr>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    
    <item>
      <title>Blog 心得（2）</title>
      <link>https://wenrongdev.com/posts/reflection-blog-2/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/reflection-blog-2/</guid>
      <description>Medium、CoderBridge、Hugo 之間的抉擇，最後選擇了 Hugo 自架。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>由於 <a href="https://www.siteground.com/">SiteGround</a> 費用問題，因此我需要把文章轉移至別的地方。不過也知道自己需要哪些功能。</p>
<ol>
<li>免費 Server</li>
<li>網頁速度快</li>
<li>支援程式碼片段</li>
<li>自訂網域</li>
</ol>
<p>這些是我目前需要的功能，不需要排版、SEO、等功能，最好是直接把 Markdown 語法貼上就能變成文章，剩下就都可以接受了。</p>
<h2 id="medium">Medium</h2>
<p>先說結論 Medium 不適合需要貼上 Code 的技術類文章。</p>
<ol>
<li>
<p>貼程式碼片段太麻煩。</p>
</li>
<li>
<p>使用 Markdown 語法撰寫文章，因為格式不同需要重新排版。</p>
</li>
</ol>
<p>以上這兩點是使用後遇到的<strong>難題</strong>，導致我不得不再尋找新的平台。也是這時候才知道自己的 Blog 需要什麼樣的功能。最後在 <a href="https://hulitw.medium.com/tech-blog-coderbridge-to-the-rescue-2ba5b52d8bcd">寫技術部落格不需要那麼大費周章</a> 發現了 <a href="https://zh-tw.coderbridge.com/">CoderBridge</a>，並且申請了 Blog。</p>
<h2 id="coderbridge">CoderBridge</h2>
<p>完整提供 <a href="#%E5%89%8D%E8%A8%80">前言</a> 提到所有功能，不過我最後還是選擇使用 Hugo 自架 Blog。</p>
<p>主因是文章沒有<strong>備份檔</strong>。</p>
<p>因為我自己的壞習慣，所以才都沒有留住這些檔案。也因為從 Wordpress、Medium、CoderBridge 換了三個 Blog，覺得搬遷好麻煩，都沒有完整的文章檔案，每次都需要重新排版，才會想架一個免費而且可以保留文章檔案的 Blog。</p>
<p>最後自己是選擇了使用 Hugo 框架架在 Github page 上。</p>
<h2 id="結論">結論</h2>
<p>Wordpress、Medium、CoderBridge 我覺得各有優缺點，假如自己從一開始就決定要找免費的，我會選擇使用 CoderBridge，不過也因為搬來搬去才知道自己需要哪些功能，最後使用 Hugo 也只是因為我自己覺得很潮而已。</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Blog 心得（1）</title>
      <link>https://wenrongdev.com/posts/reflection-blog-1/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/reflection-blog-1/</guid>
      <description>從 2019 開始架設自己的 Blog 的心路歷程。使用過 Wordpress、Medium、CoderBridge、Blogger，最後選擇了 Hugo 並且自討苦吃。</description>
      <content:encoded><![CDATA[<p>其實我的 Blog 是寫給自己看的。因為我時常忘記怎麼解決問題、怎麼製作功能、忘記是做了什麼蠢事。因此產生這個 Blog 用來記錄我的跌跌撞撞的過程。</p>
<h2 id="前言">前言</h2>
<p>在大學寫程式時遇到問題去 Google 查，很多時候很難下關鍵字，主要是自己犯蠢導致很難知道原因。自然而然也很難對症下藥，很多時候只是重打或參考(?)同學就能解決學生時期遇到的問題。</p>
<p>當開始工作時的第一年內，遇到的問題基本上還是類似的，因為我實在是太菜了，會遇到一些其實很基本又很無言的低級錯誤，一直重複的犯錯麻煩其他同事幫忙 debug，所以我一直有一個念頭想架設自己的 Blog。記錄解決過程和解決方式，提醒未來自己有錯誤可以來這邊看，假如又可以幫助別人其實也不錯。</p>
<h2 id="blogger">Blogger</h2>
<p>第一個 Blog 是使用大學某堂課程用到的 <a href="https://www.blogger.com/">Blogger</a>，其實也沒太認真研究這個 Blog，因為覺得不夠好看用了一下沒有認真的使用。</p>
<p>多年之後看到 <a href="http://teddy-chen-tw.blogspot.com/">搞笑談軟工</a> 的 Blog，才知道 Blog 的重要的部分其實不是選用什麼架構，<strong>持續寫作</strong> 才是最重要的核心。</p>
<h2 id="wordpress">Wordpress</h2>
<p>2018 時覺得自己的學習成長曲線變慢了，可能是因為都接觸類似的東西，工作上也大部分內容都能應付，也不會像以前一樣回家繼續寫程式，簡單來講就是發現自己進入了舒適圈(?)。就很坎坷不安，於是就開始買書學習、跟人學習。</p>
<p>2019 的某天 Unity 程式社群，有人發問推薦的程式書籍，而 <a href="https://tedsieblog.wordpress.com/">阿祥的開發日常</a> 的 Ted 回答了 <a href="https://www.tenlong.com.tw/products/9787115429476">軟技能代碼之外的生存指南</a>。整本書內容都沒在講程式的部分，大部分內容都是在講工程師除了工作以外的事情，例如運動、投資、面試、等等，推薦沒看過的工程師可以買，對於我個人是獲益良多，也是因為看了才有想認真的自己架設 Blog。</p>
<p>書的內容其實就有推薦架設屬於自己的 Blog，當時看到就想到我當年的想法，是沒有想要跟作者一樣利用 Blog 賺錢，畢竟技術不到家。倒是覺得可以當一個不錯的作品集，於是就開始在架設自己的 Wordpress。</p>
<p>當時是看著 <a href="https://jessielab.com/wordpress%E6%95%99%E5%AD%B8-setting-up-a-website/">教學</a> 文章邊看邊選擇，過程除了刷卡付錢沒有什麼難度，我在 <a href="https://www.namecheap.com/">NameCheap</a> 買網址，虛擬主機則是使用 <a href="https://www.siteground.com/">SiteGround</a>。</p>
<h3 id="使用三年心得-20192020">使用三年心得 (2019~2020)</h3>
<table>
<thead>
<tr>
<th style="text-align:center">年分</th>
<th style="text-align:right">SiteGround</th>
<th style="text-align:right">NameCheap</th>
<th style="text-align:right">花費(NTD)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">第一年</td>
<td style="text-align:right">1493</td>
<td style="text-align:right">285</td>
<td style="text-align:right">1778</td>
</tr>
<tr>
<td style="text-align:center">第二年</td>
<td style="text-align:right">5375</td>
<td style="text-align:right">315</td>
<td style="text-align:right">5690</td>
</tr>
<tr>
<td style="text-align:center">第三年</td>
<td style="text-align:right">0</td>
<td style="text-align:right">368</td>
<td style="text-align:right">368</td>
</tr>
<tr>
<td style="text-align:center">總花費</td>
<td style="text-align:right"></td>
<td style="text-align:right"></td>
<td style="text-align:right">7836</td>
</tr>
</tbody>
</table>
<p>第一年 1778 元。而且很多功能可以玩、可以使用，整體使用是很滿意的。而到了第二年，沒有認真確認第一年花費多少就直接續約了，收到扣款通知才知道收費真的<strong>很貴</strong>。</p>
<p>第一年跟第二年價格差了 <strong>3912</strong> 元，當時也沒有想到要退款，想說明年扣款時再來處理。</p>
<p>到了第三年，就打算不續約 SiteGround，所以開始把文章轉移去 <a href="https://medium.com/">Medium</a>，不過 NameCheap 是有持續付費的，畢竟費用還是較少，而且網址現在還在使用。</p>
<p>後來用 Hugo 架設這個 Blog，才知道 Wordpress 的好，很多事情都很簡單就完成（SEO、theme、等等）。</p>
<h2 id="結論">結論</h2>
<p>整體而言 Wordpress 對於新手的我架設 Blog，確實是不錯的體驗，只要有錢基本都能處理。不過續約的花費太貴，所以才放棄使用 SiteGround，尋找一些免費的方式。</p>
<p>當時使用 NameCheap 時也有被盜刷過，記得要綁定 2FA、密碼不要重複。
<img loading="lazy" src="https://imgur.com/pJBH4Q6.jpg" alt="img_1"  />
</p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>About</title>
      <link>https://wenrongdev.com/profile/about/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/profile/about/</guid>
      <description>五年以上遊戲開發經驗，多數專案都是一人製作完成，涵蓋上架、維護及效能優化等。 擁有 iOS、Android 遊戲上架經驗， 以及多款 AR/VR/MR/Kinect/Oculus 遊戲開發經驗。</description>
      <content:encoded><![CDATA[<p>五年以上遊戲開發經驗，多數專案都是一人製作完成，涵蓋上架、維護及效能優化等。</p>
<p>擁有 iOS、Android 遊戲上架經驗， 以及多款 AR/VR/MR/Kinect/Oculus 遊戲開發經驗。</p>
<p>希望能參與更多元專案開發，學習到更不同面向的開發或研究經驗。</p>
<h2 id="聯絡方式">聯絡方式</h2>
<p>📧 <a href="mailto:hybrid0930@gmail.com">hybrid0930@gmail.com</a></p>
<p>📄 <a href="/profile/cv_wenrong.pdf">CV</a></p>
<h2 id="工作經歷">工作經歷</h2>
<dl>
<dt><em>2015/11 – 2023/07</em></dt>
<dd><a href="https://jt-qc.com/">錦田雲端科技</a></dd>
</dl>
<ul>
<li>分析專案計畫可行性，並與各部門討論如何執行分工。</li>
<li>規劃程式架構使用技術。</li>
<li>進行專案測試、修改及性能優化。</li>
<li>研發軟體新技術與新工具。</li>
</ul>
<h2 id="skills">Skills</h2>
<dl>
<dt>Tech Stack</dt>
<dd>Android Studio, C#, Git, Lua, Unity, Visual Studio, XCode</dd>
<dt>Unity Tools</dt>
<dd>Addressables, AR Foundation, Cardboard, DOTween, Meta Quest, UniTask, Vuforia, Odin</dd>
</dl>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity MathQuiz</title>
      <link>https://wenrongdev.com/posts/unity-mathquiz/</link>
      <pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-mathquiz/</guid>
      <description>此專案為 Unity math quiz，是基於 Tutorial 2 Create a timed math quiz 文件改寫出來的專案。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>此專案為 Unity math quiz，是基於 <a href="https://docs.microsoft.com/en-us/visualstudio/ide/tutorial-2-create-a-timed-math-quiz">Tutorial 2: Create a timed math quiz</a> 文件改寫出來的專案。</p>
<p><img loading="lazy" src="https://i.imgur.com/Igy3NfA.gif" alt="img"  />
</p>
<h2 id="github"><a href="https://github.com/Wenrong274/MathQuiz">Github</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Calendar</title>
      <link>https://wenrongdev.com/posts/unity-calendar/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-calendar/</guid>
      <description>Unity 實做日曆功能。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img loading="lazy" src="https://i.imgur.com/Pe4nXry.gif" alt="gif"  />
</p>
<h2 id="使用方式">使用方式</h2>
<p>預設日期為<code>當天日期</code>。</p>
<p>可以直接使用 <code>UnityCalendar.GetDate()</code> 取得使用者設定日期，假如有錯誤會回報錯誤。</p>
<p><code>testGetDate.cs</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> OnClick_GetDate()
{
    DateTime dt = unityCalendar.GetDate();
    text.text = dt.ToString(<span style="color:#e6db74">&#34;yyyy-MM-dd&#34;</span>);
}

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> OnClick_Clear()
{
    text.text = <span style="color:#66d9ef">string</span>.Empty;
    unityCalendar.Init();
}
</code></pre></div><h2 id="github"><a href="https://github.com/Wenrong274/Unity-Calendar">Github</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Addressable</title>
      <link>https://wenrongdev.com/posts/unity-addressable/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-addressable/</guid>
      <description>主要是實作 Addressable hotfix 的寫法。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>主要是實作 Addressable hotfix 的寫法。</p>
<p>基本 Unity-Addressable 安裝及 Remote 設定可以參考這篇 <a href="https://medium.com/@nai.hsue/unity%E7%AD%86%E8%A8%98-addressable-asset-system-dbebf981143b">Unity 筆記 Addressable Asset System</a>。</p>
<p>詳細解說可以參考</p>
<p>Unity Addressables 深入浅出<a href="https://blog.csdn.net/qq_14903317/article/details/108509938">(一)</a>、<a href="https://blog.csdn.net/qq_14903317/article/details/108529590">(二)</a>、<a href="https://blog.csdn.net/qq_14903317/article/details/108582372">(三)</a></p>
<p><a href="https://arclee0117.wordpress.com/2020/09/10/unity-addressable-%E7%8D%A8%E7%AB%8B%E8%B3%87%E6%BA%90%E5%8C%85/">Unity Addressable 獨立資源包</a></p>
<h2 id="實例">實例</h2>
<h3 id="initialization">Initialization</h3>
<p>Initial Addressable System 是<code>必要</code>的假如不初始化會造成一些使用上的問題。</p>
<p>在 Start 上可直接初始化 Addressable System</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator Start()
{
    <span style="color:#66d9ef">var</span> InitAddressablesAsync = Addressables.InitializeAsync();
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> InitAddressablesAsync;
}
</code></pre></div><h3 id="update-catalog">Update Catalog</h3>
<p>Catalog 是所有檔案的紀錄檔(log)，不更新 Catalog 也是能下載 Asset，可是會造成無法 hotfix，所以需要再下載前更一次 Catalog。</p>
<h4 id="catalog-path">Catalog Path</h4>
<p>依 Window 為例，Catalog 更新後會放自動放置在</p>
<p><code>C:\Users\[PC Name]\AppData\LocalLow\[Company Name]\[Product Name]\com.unity.addressables</code></p>
<table>
<thead>
<tr>
<th style="text-align:left">名稱</th>
<th style="text-align:left">解釋</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">[PC Name]</td>
<td style="text-align:left">系統使用者名稱</td>
</tr>
<tr>
<td style="text-align:left">[Company Name]</td>
<td style="text-align:left">Unity 專案 Company Name</td>
</tr>
<tr>
<td style="text-align:left">[Product Name]</td>
<td style="text-align:left">Unity 專案 Product Name</td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="https://imgur.com/QAbjzCM.jpg" alt="asset_1"  />
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator UpdateCatalogCoro()
{
    List&lt;<span style="color:#66d9ef">string</span>&gt; catalogsToUpdate = <span style="color:#66d9ef">new</span> List&lt;<span style="color:#66d9ef">string</span>&gt;();
    <span style="color:#66d9ef">var</span> checkCatalogHandle = Addressables.CheckForCatalogUpdates(<span style="color:#66d9ef">false</span>);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> checkCatalogHandle;

    <span style="color:#66d9ef">if</span> (checkCatalogHandle.Status == AsyncOperationStatus.Succeeded)
        catalogsToUpdate = checkCatalogHandle.Result;

    <span style="color:#66d9ef">if</span> (catalogsToUpdate.Count &gt; <span style="color:#ae81ff">0</span>)
    {
        <span style="color:#66d9ef">var</span> updateCatalogHandle = Addressables.UpdateCatalogs(catalogsToUpdate, <span style="color:#66d9ef">false</span>);
        <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> updateCatalogHandle;
    }
}
</code></pre></div><h3 id="update-asset">Update Asset</h3>
<p>下載好的 Asset，在測試時不清除是會造成無法測試下載流程，可是可以手動清除下載 Asset。</p>
<h4 id="asset-path">Asset Path</h4>
<p>依 Window 為例，下載好的 Asset 更新後會放自動放置在</p>
<p><code>C:\Users\[PC Name]\AppData\LocalLow\Unity\[Company Name]_[Product Name]</code></p>
<table>
<thead>
<tr>
<th style="text-align:left">名稱</th>
<th style="text-align:left">解釋</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">[PC Name]</td>
<td style="text-align:left">系統使用者名稱</td>
</tr>
<tr>
<td style="text-align:left">[Company Name]</td>
<td style="text-align:left">Unity 專案 Company Name</td>
</tr>
<tr>
<td style="text-align:left">[Product Name]</td>
<td style="text-align:left">Unity 專案 Product Name</td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="https://imgur.com/Av0faq4.jpg" alt="asset_2"  />
</p>
<h4 id="update-all-asset">Update All Asset</h4>
<p>這個方式是使用 AA 系統紀錄 Catalog 取得出來的位置（Locator），在使用 <code>GetDownloadSizeAsync</code> 來確認檔案有無更新，來達成更新所有檔案。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator UpdateAllGroupsCoro()
{
    <span style="color:#66d9ef">foreach</span> (<span style="color:#66d9ef">var</span> loc <span style="color:#66d9ef">in</span> Addressables.ResourceLocators)
    {
        <span style="color:#66d9ef">foreach</span> (<span style="color:#66d9ef">var</span> key <span style="color:#66d9ef">in</span> loc.Keys)
        {
            <span style="color:#66d9ef">var</span> sizeAsync = Addressables.GetDownloadSizeAsync(key);
            <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> sizeAsync;
            <span style="color:#66d9ef">long</span> totalDownloadSize = sizeAsync.Result;

            <span style="color:#66d9ef">if</span> (sizeAsync.Result &gt; <span style="color:#ae81ff">0</span>)
            {
                <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(key);
                <span style="color:#66d9ef">while</span> (!downloadAsync.IsDone)
                {
                    <span style="color:#66d9ef">float</span> percent = downloadAsync.PercentComplete;
                    Debug.Log(<span style="color:#e6db74">$&#34;{key} = percent {(int)(totalDownloadSize * percent)}/{totalDownloadSize}&#34;</span>);
                    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> WaitForEndOfFrame();
                }
                Addressables.Release(downloadAsync);
            }
            Addressables.Release(sizeAsync);
        }
    }
}
</code></pre></div><h4 id="update-label-asset">Update label Asset</h4>
<p>這個方式是使用 Label 下載特定資源。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator UpdateLabelAsset(<span style="color:#66d9ef">string</span> label)
{
    <span style="color:#66d9ef">long</span> updateLabelSize = <span style="color:#ae81ff">0</span>;
    <span style="color:#66d9ef">var</span> <span style="color:#66d9ef">async</span> = Addressables.GetDownloadSizeAsync(label);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    <span style="color:#66d9ef">if</span> (<span style="color:#66d9ef">async</span>.Status == AsyncOperationStatus.Succeeded)
        updateLabelSize = <span style="color:#66d9ef">async</span>.Result;
    Addressables.Release(<span style="color:#66d9ef">async</span>);
    <span style="color:#66d9ef">if</span> (updateLabelSize == <span style="color:#ae81ff">0</span>)
    {
        Debug.Log(<span style="color:#e6db74">$&#34;{label} last version&#34;</span>);
        <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">break</span>;
    }
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> DownloadLabelAsset(label);
}

IEnumerator DownloadLabelAsset(<span style="color:#66d9ef">string</span> label)
{
    <span style="color:#66d9ef">var</span> downloadAsync = Addressables.DownloadDependenciesAsync(label, <span style="color:#66d9ef">false</span>);

    <span style="color:#66d9ef">while</span> (!downloadAsync.IsDone)
    {
        <span style="color:#66d9ef">float</span> percent = downloadAsync.PercentComplete;
        Debug.Log(<span style="color:#e6db74">$&#34;{label}: {downloadAsync.PercentComplete * 100} %&#34;</span>);
        <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">new</span> WaitForEndOfFrame();
    }
    Addressables.Release(downloadAsync);

    Debug.Log(<span style="color:#e6db74">$&#34;{label} UpdateAssets finish&#34;</span>);
}
</code></pre></div><h3 id="clear-asset">Clear Asset</h3>
<p>刪除 <a href="#asset-path">Asset Path</a> 路徑下載的檔案。</p>
<h4 id="clear-all-asset">Clear All Asset</h4>
<p><code>Caching.ClearCache()</code> 是能夠完整的清除下載的所有檔案，但是不能單獨使用，還要搭配 <code>Addressables.ClearDependencyCacheAsync</code> 才能清除 Catalog 紀錄的下載資訊。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator ClearAllAssetCoro()
{
    <span style="color:#66d9ef">foreach</span> (<span style="color:#66d9ef">var</span> locats <span style="color:#66d9ef">in</span> Addressables.ResourceLocators)
    {
        <span style="color:#66d9ef">var</span> <span style="color:#66d9ef">async</span> = Addressables.ClearDependencyCacheAsync(locats.Keys, <span style="color:#66d9ef">false</span>);
        <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
        Addressables.Release(<span style="color:#66d9ef">async</span>);
    }
    Caching.ClearCache();
}
</code></pre></div><h4 id="clear-label-asset">Clear Label Asset</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp">IEnumerator ClearAssetCoro(<span style="color:#66d9ef">string</span> label)
{
    <span style="color:#66d9ef">var</span> <span style="color:#66d9ef">async</span> = Addressables.LoadResourceLocationsAsync(label);
    <span style="color:#66d9ef">yield</span> <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">async</span>;
    <span style="color:#66d9ef">var</span> locats = <span style="color:#66d9ef">async</span>.Result;
    <span style="color:#66d9ef">foreach</span> (<span style="color:#66d9ef">var</span> locat <span style="color:#66d9ef">in</span> locats)
        Addressables.ClearDependencyCacheAsync(locat.PrimaryKey);
}
</code></pre></div><h2 id="githubgithub"><a href="https://github.com/Wenrong274/Unity-Addressable">Github</a></h2>
<h2 id="小結">小結</h2>
<p>write something cool&hellip;</p>
<h2 id="參考連結">參考連結</h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity ParticlePath</title>
      <link>https://wenrongdev.com/posts/unity-particlepath/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-particlepath/</guid>
      <description>Unity 實作粒子路徑系統。</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="https://i.imgur.com/tNmcGdz.gif" alt="demogif"  />
</p>
<h2 id="githubgithub"><a href="https://github.com/hybrid274/ParticlePath">GitHub</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Dimmer</title>
      <link>https://wenrongdev.com/posts/unity-dimmer/</link>
      <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-dimmer/</guid>
      <description>Unity 調整 Android、iOS 系統亮度功能。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>Unity 調整 Android、iOS 系統亮度功能。</p>
<h2 id="使用方式">使用方式</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#">Dimmer.SetBrightness.DoAction(<span style="color:#66d9ef">value</span>);
</code></pre></div><h2 id="github"><a href="https://github.com/Wenrong274/Unity-Dimmer">Github</a></h2>
<h2 id="參考連結">參考連結</h2>
<p><a href="https://qiita.com/Shunsuke-Suzuki-Gen/items/5af162d7b169fd4c7e85">Unity から iOS&amp;Android の画面輝度を MAX にする方法</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Add Text Spacing for Unity</title>
      <link>https://wenrongdev.com/posts/add-text-spacing-for-unity/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/add-text-spacing-for-unity/</guid>
      <description>在 UnityEngine.UI.Text 增加 TextSpacing，且調整 TextSpacing 的 Spacing 調整文字間格。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在 <code>UnityEngine.UI.Text</code> 增加 TextSpacing，且調整 TextSpacing 的 <code>Spacing</code> 調整文字間格。</p>
<h2 id="scripts">Scripts</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-csharp" data-lang="csharp"><span style="color:#66d9ef">using</span> System.Collections.Generic;
<span style="color:#66d9ef">using</span> UnityEngine;
<span style="color:#66d9ef">using</span> UnityEngine.UI;
<span style="color:#a6e22e">
</span><span style="color:#a6e22e">[AddComponentMenu(&#34;UI/Effects/TextSpacing&#34;)]</span>
<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">TextSpacing</span> : BaseMeshEffect
{
    <span style="color:#75715e">#region Struct
</span><span style="color:#75715e"></span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">enum</span> HorizontalAligmentType
    {
        Left,
        Center,
        Right
    }

    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">Line</span>
    {
        <span style="color:#75715e">// 起點索引
</span><span style="color:#75715e"></span>        <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> StartVertexIndex { <span style="color:#66d9ef">get</span> { <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">_</span>startVertexIndex; } }
        <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">int</span> <span style="color:#ae81ff">_</span>startVertexIndex = <span style="color:#ae81ff">0</span>;

        <span style="color:#75715e">// 終點索引
</span><span style="color:#75715e"></span>        <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> EndVertexIndex { <span style="color:#66d9ef">get</span> { <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">_</span>endVertexIndex; } }
        <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">int</span> <span style="color:#ae81ff">_</span>endVertexIndex = <span style="color:#ae81ff">0</span>;

        <span style="color:#75715e">// 該行佔的點數目
</span><span style="color:#75715e"></span>        <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">int</span> VertexCount { <span style="color:#66d9ef">get</span> { <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">_</span>vertexCount; } }
        <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">int</span> <span style="color:#ae81ff">_</span>vertexCount = <span style="color:#ae81ff">0</span>;

        <span style="color:#66d9ef">public</span> Line(<span style="color:#66d9ef">int</span> startVertexIndex, <span style="color:#66d9ef">int</span> length)
        {
            <span style="color:#ae81ff">_</span>startVertexIndex = startVertexIndex;
            <span style="color:#ae81ff">_</span>endVertexIndex = length * <span style="color:#ae81ff">6</span> - <span style="color:#ae81ff">1</span> + startVertexIndex;
            <span style="color:#ae81ff">_</span>vertexCount = length * <span style="color:#ae81ff">6</span>;
        }
    }

    <span style="color:#75715e">#endregion
</span><span style="color:#75715e"></span>
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">float</span> Spacing = <span style="color:#ae81ff">1f</span>;

    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">override</span> <span style="color:#66d9ef">void</span> ModifyMesh(VertexHelper vh)
    {
        <span style="color:#66d9ef">if</span> (!IsActive() || vh.currentVertCount == <span style="color:#ae81ff">0</span>)
        {
            <span style="color:#66d9ef">return</span>;
        }

        <span style="color:#66d9ef">var</span> text = GetComponent&lt;Text&gt;();

        <span style="color:#66d9ef">if</span> (text == <span style="color:#66d9ef">null</span>)
        {
            Debug.LogError(<span style="color:#e6db74">&#34;Missing Text component&#34;</span>);
            <span style="color:#66d9ef">return</span>;
        }

        <span style="color:#75715e">// 水平對齊方式
</span><span style="color:#75715e"></span>        HorizontalAligmentType alignment;
        <span style="color:#66d9ef">if</span> (text.alignment == TextAnchor.LowerLeft || text.alignment == TextAnchor.MiddleLeft || text.alignment == TextAnchor.UpperLeft)
        {
            alignment = HorizontalAligmentType.Left;
        }
        <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (text.alignment == TextAnchor.LowerCenter || text.alignment == TextAnchor.MiddleCenter || text.alignment == TextAnchor.UpperCenter)
        {
            alignment = HorizontalAligmentType.Center;
        }
        <span style="color:#66d9ef">else</span>
        {
            alignment = HorizontalAligmentType.Right;
        }

        <span style="color:#66d9ef">var</span> vertexs = <span style="color:#66d9ef">new</span> List&lt;UIVertex&gt;();
        vh.GetUIVertexStream(vertexs);
        <span style="color:#75715e">// var indexCount = vh.currentIndexCount;
</span><span style="color:#75715e"></span>
        <span style="color:#66d9ef">var</span> lineTexts = text.text.Split(<span style="color:#e6db74">&#39;\n&#39;</span>);

        <span style="color:#66d9ef">var</span> lines = <span style="color:#66d9ef">new</span> Line[lineTexts.Length];

        <span style="color:#75715e">// 根據lines數組中各個元素的長度計算每一行中第一個點的索引，每個字、字母、空母均佔6個點
</span><span style="color:#75715e"></span>        <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> i = <span style="color:#ae81ff">0</span>; i &lt; lines.Length; i++)
        {
            <span style="color:#75715e">// 除最後一行外，vertexs對於前面幾行都有回車符佔了6個點
</span><span style="color:#75715e"></span>            <span style="color:#66d9ef">if</span> (i == <span style="color:#ae81ff">0</span>)
            {
                lines[i] = <span style="color:#66d9ef">new</span> Line(<span style="color:#ae81ff">0</span>, lineTexts[i].Length + <span style="color:#ae81ff">1</span>);
            }
            <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (i &gt; <span style="color:#ae81ff">0</span> &amp;&amp; i &lt; lines.Length - <span style="color:#ae81ff">1</span>)
            {
                lines[i] = <span style="color:#66d9ef">new</span> Line(lines[i - <span style="color:#ae81ff">1</span>].EndVertexIndex + <span style="color:#ae81ff">1</span>, lineTexts[i].Length + <span style="color:#ae81ff">1</span>);
            }
            <span style="color:#66d9ef">else</span>
            {
                lines[i] = <span style="color:#66d9ef">new</span> Line(lines[i - <span style="color:#ae81ff">1</span>].EndVertexIndex + <span style="color:#ae81ff">1</span>, lineTexts[i].Length);
            }
        }

        UIVertex vt;

        <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> i = <span style="color:#ae81ff">0</span>; i &lt; lines.Length; i++)
        {
            <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> j = lines[i].StartVertexIndex; j &lt;= lines[i].EndVertexIndex; j++)
            {
                <span style="color:#66d9ef">if</span> (j &lt; <span style="color:#ae81ff">0</span> || j &gt;= vertexs.Count)
                {
                    <span style="color:#66d9ef">continue</span>;
                }

                vt = vertexs[j];

                <span style="color:#66d9ef">var</span> charCount = lines[i].EndVertexIndex - lines[i].StartVertexIndex;
                <span style="color:#66d9ef">if</span> (i == lines.Length - <span style="color:#ae81ff">1</span>)
                {
                    charCount += <span style="color:#ae81ff">6</span>;
                }

                <span style="color:#66d9ef">if</span> (alignment == HorizontalAligmentType.Left)
                {
                    vt.position += <span style="color:#66d9ef">new</span> Vector3(Spacing * ((j - lines[i].StartVertexIndex) / <span style="color:#ae81ff">6</span>), <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>);
                }
                <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (alignment == HorizontalAligmentType.Right)
                {
                    vt.position += <span style="color:#66d9ef">new</span> Vector3(Spacing * (-(charCount - j + lines[i].StartVertexIndex) / <span style="color:#ae81ff">6</span> + <span style="color:#ae81ff">1</span>), <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>);
                }
                <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (alignment == HorizontalAligmentType.Center)
                {
                    <span style="color:#66d9ef">var</span> offset = (charCount / <span style="color:#ae81ff">6</span>) % <span style="color:#ae81ff">2</span> == <span style="color:#ae81ff">0</span> ? <span style="color:#ae81ff">0.5f</span> : <span style="color:#ae81ff">0f</span>;
                    vt.position += <span style="color:#66d9ef">new</span> Vector3(Spacing * ((j - lines[i].StartVertexIndex) / <span style="color:#ae81ff">6</span> - charCount / <span style="color:#ae81ff">12</span> + offset), <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>);
                }

                vertexs[j] = vt;
                <span style="color:#75715e">// 以下注意點與索引的對應關係
</span><span style="color:#75715e"></span>                <span style="color:#66d9ef">if</span> (j % <span style="color:#ae81ff">6</span> &lt;= <span style="color:#ae81ff">2</span>)
                {
                    vh.SetUIVertex(vt, (j / <span style="color:#ae81ff">6</span>) * <span style="color:#ae81ff">4</span> + j % <span style="color:#ae81ff">6</span>);
                }

                <span style="color:#66d9ef">if</span> (j % <span style="color:#ae81ff">6</span> == <span style="color:#ae81ff">4</span>)
                {
                    vh.SetUIVertex(vt, (j / <span style="color:#ae81ff">6</span>) * <span style="color:#ae81ff">4</span> + j % <span style="color:#ae81ff">6</span> - <span style="color:#ae81ff">1</span>);
                }
            }
        }
    }
}
</code></pre></div><h2 id="問題">問題</h2>
<p>無法自由換行</p>
<h2 id="參考連結">參考連結</h2>
<p><a href="https://blog.csdn.net/qq_38721111/article/details/102592001">UGUI 中 Text 的字间距</a></p>
<p><a href="https://blog.csdn.net/qq_38721111/article/details/102592001">UGUI 中随意调整 Text 中的字体间距</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Mobile Joystick</title>
      <link>https://wenrongdev.com/posts/mobile-joystick/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/mobile-joystick/</guid>
      <description>主要是用來測試 Unity 虛擬搖桿功能。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>主要是用來測試虛擬搖桿功能。</p>
<p>使用 <a href="https://assetstore.unity.com/packages/tools/input-management/joystick-pack-107631">Joystick Pack</a> 支援各輸入端接口偛件。</p>
<h2 id="tutorialtutorial"><a href="https://www.youtube.com/watch?v=8-X3BmvtXT0">Tutorial</a></h2>
<h2 id="github"><a href="https://github.com/Wenrong274/MobileJoystick">Github</a></h2>
<hr>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Folder Manager</title>
      <link>https://wenrongdev.com/posts/folder-manager/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/folder-manager/</guid>
      <description>Unity 視覺化管理使用路徑。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>視覺化管理使用路徑，不過目前功能還是很粗糙。</p>
<h2 id="feature">Feature</h2>
<p>視覺化管理</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/FolderManager/master/doc/img/img_1.jpg" alt="img_1"  />
</p>
<h2 id="usage">Usage</h2>
<p>Create path 之後會在
<code>Assets\FolderManager\StreamingAssets\FolderManager.asset</code>
出現 asset。</p>
<p><code>Asset</code> 即是<code>FolderManager.Folders</code>，因此可以直接宣告此 class 使用。</p>
<h2 id="github"><a href="https://github.com/Wenrong274/FolderManager">Github</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Data Access WebGL</title>
      <link>https://wenrongdev.com/posts/data-access-webgl/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/data-access-webgl/</guid>
      <description>Unity 在 WebGL 時存/讀檔案的方式，檔案是放在 IndexedDB。是有容量大小限制，所以需要注意存儲的檔案大小。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>Unity 在 WebGL 時存/讀檔案的方式，檔案是放在 IndexedDB。</p>
<p><code>IndexedDB</code> 是有容量大小限制，所以需要注意存儲的檔案大小。</p>
<h2 id="about-indexeddb">About IndexedDB</h2>
<p><a href="https://www.html5rocks.com/en/tutorials/offline/quota-research/">Working with quota on mobile browsers</a></p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/DataAccessWebGL/master/doc/img/1.png" alt="img_1"  />
</p>
<h2 id="githubhttpsgithubcomwenrong274dataaccesswebgl"><a href="https://github.com/Wenrong274/DataAccessWebGL">GitHub</a></h2>
<h2 id="introduction">Introduction</h2>
<ul>
<li>
<p>File Path</p>
<p><code>string.Format(&quot;{0}/{1}.dat&quot;, Application.persistentDataPath, FileName);</code></p>
</li>
<li>
<p>Save Method</p>
<p>DataAccess.Save(fileName, bytes);</p>
</li>
<li>
<p>Load Method</p>
<p>byte[] bytes = DataAccess.Load(fileName);</p>
</li>
<li>
<p>Example Scene</p>
<p><code>root\Assets\WebGL\Example\Scenes\Example</code></p>
</li>
</ul>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity Jenkins Build</title>
      <link>https://wenrongdev.com/posts/unity-jenkins-build/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-jenkins-build/</guid>
      <description>此為使用 Jenkins 輸出 Unity 專案注意事項。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>此為使用 Jenkins 輸出 Unity 專案注意事項。</p>
<h2 id="setting">Setting</h2>
<p>須注意 Unity 有無安裝輸出目標平台（Android、iOS、WebGL&hellip;）。</p>
<p>並且要設定 Jenkins 環境（AndroidSDK、JDK、Unity Editor）。</p>
<h3 id="jenkins-android-sdk">Jenkins Android SDK</h3>
<p>需要新增 Jenkins 環境變數（Environment variable），來設定 Android SDK 路徑。</p>
<p>Jenkins 頁面路徑為 <code>Manage Jenkins -&gt; Configure System -&gt; Global properties</code>。</p>
<p>設定如下圖：</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/UnityJenkinsBuild/master/doc/img/1.JPG" alt="img_1"  />
</p>
<p><code>Name</code>：<code>ANDROID_HOME</code></p>
<p><code>Value</code>：AndroidSDK 路徑。</p>
<h3 id="jenkins-jdk">Jenkins JDK</h3>
<p>JDK 版本請選 <code>Java SE 8</code>，因為 Unity 只支援 Java SE 8。</p>
<p>Jenkins 頁面路徑為 <code>Manage Jenkins -&gt; Global Tool Configuration -&gt; JDK</code>。</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/UnityJenkinsBuild/master/doc/img/2.JPG" alt="img_2"  />
</p>
<h3 id="jenkins-unity3d-plugin">Jenkins Unity3d Plugin</h3>
<p>需要至 Plugin Manager 安裝 Unity3d Plugin。</p>
<p>Jenkins 頁面路徑為 <code>Manage Jenkins -&gt; Plugin Manager -&gt; Available</code></p>
<p>安裝完成後，需要設定 Unity Editor 路徑。</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/UnityJenkinsBuild/master/doc/img/3.JPG" alt="img_3"  />
</p>
<p><code>Name</code>：unity version</p>
<p><code>Installation directory</code>：unity installed path</p>
<h3 id="jenkins-item">Jenkins item</h3>
<p>基本設置可參考 <a href="http://hoseex.blogspot.com/2017/12/jenkinsunity3d.html">使用 jenkins 建置 unity3d 專案</a> 介紹。</p>
<p>最主要是設定 <code>Editor command line arguments</code>。</p>
<p>頁面路徑：<code>Configure -&gt; General -&gt; Build</code></p>
<p>點選 Add build step -&gt; invoke Unity3d Editor，選擇對應的 Unity 編輯器版本。</p>
<p>在 Editor command line arguments 輸入</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">-projectPath &#34;$WORKSPACE/&#34; -executeMethod JenkinsBuild.BuildPlatforms -buildPath &#34;$WORKSPACE\Builds&#34; -android -batchmode -nographics -quit
</code></pre></div><p><code>-buildPath &quot;$WORKSPACE\Builds&quot;</code> &ldquo;$WORKSPACE\Builds 輸出放置資料夾路徑。</p>
<p><code>-android</code> 為輸出平台，可改為 -windows32、-windows64、-linux64、-macos、-android、-ios、-webgl。</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/Wenrong274/UnityJenkinsBuild/master/doc/img/4.JPG" alt="img_4"  />
</p>
<h2 id="github-repogithub"><a href="https://github.com/Wenrong274/UnityJenkinsBuild">GitHub Repo</a></h2>
<h2 id="reference">reference</h2>
<p><a href="http://hoseex.blogspot.com/2017/12/jenkinsunity3d.html">使用 jenkins 建置 unity3d 專案</a></p>
<p><a href="https://github.com/CarlHalstead/Jenkins-for-Unity-with-DigitalOcean/">Jenkins for Unity with DigitalOcean</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Hyperlinks in Unity Text</title>
      <link>https://wenrongdev.com/posts/hyperlinks-in-unity-text/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/hyperlinks-in-unity-text/</guid>
      <description>Unity uGUI Text support insert link and image。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>測試 <a href="https://github.com/akof1314/uGUI_LinkImageText">LinkImageText</a> 應用。</p>
<p><img loading="lazy" src="https://github.com/Wenrong274/HyperlinksText/blob/master/doc/img/1.png" alt="Img_1"  />
</p>
<h2 id="主要內容">主要內容</h2>
<p>使用 <a href="https://github.com/kimsama/Unity-QuickSheet">QuickSheet</a> 當資料庫，讓 <a href="https://github.com/setchi/FancyScrollView">FancyScrollView</a> 顯示資料庫名字。</p>
<p>點擊 FancyScrollView button 會在 <a href="https://github.com/akof1314/uGUI_LinkImageText">HypeLinkText</a> 顯示 name。</p>
<p>點擊 HypeLinkText 超連結文字，會顯示<code>超連結</code>內容。</p>
<h2 id="github-repohttpsgithubcomwenrong274hyperlinkstext"><a href="https://github.com/Wenrong274/HyperlinksText">GitHub repo</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>FCM Notifications Not Received on Android</title>
      <link>https://wenrongdev.com/posts/fcm-notifications-not-received-on-android/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/fcm-notifications-not-received-on-android/</guid>
      <description>沒辦法在 APP 不活躍或不喚醒（not active）狀態推送推播訊息解決方式。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>前陣子因為專案需要後台推播功能，所以開始測試 FCM(Firebase Cloud Messaging）功能。</p>
<p>測試的過程一直沒辦法在 APP 不活躍或不喚醒（not active）狀態推送推播訊息。</p>
<p>後來發現主因是<code>省電模式（Doze mode）</code>導致 APP 無法接受任何推波內容。</p>
<h2 id="參考連結">參考連結</h2>
<p><a href="https://developer.android.com/training/monitoring-device-state/doze-standby?hl=zh_cn">https://developer.android.com/training/monitoring-device-state/doze-standby?hl=zh_cn</a></p>
<p><a href="https://blog.csdn.net/pkorochi/article/details/87186659">https://blog.csdn.net/pkorochi/article/details/87186659</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Android P HTTP Error</title>
      <link>https://wenrongdev.com/posts/android-p-http-error/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/android-p-http-error/</guid>
      <description>在 Android 9.0 中使用 WebReqesut 時，URL 是需要用 Https 才能正常使用，不然 Response 都是 Error。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在 Android 9.0 中使用 WebReqesut 時，URL 是需要用 Https 才能正常使用，不然 Response 都是 Error。（<a href="https://developer.android.com/about/versions/pie/android-9.0-changes-28?hl=zh-cn#apache-p">Google Doc</a>）</p>
<p>Error Log：<code>Cleartext HTTP traffic to 45.xx.xxx.xx not permitted</code></p>
<h2 id="solution">Solution</h2>
<p>在 <code>AndroidManifest.xml</code> 的 <code>application</code> 加入 <code>android:usesCleartextTraffic=&quot;true&quot;</code>。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-xml" data-lang="xml">    <span style="color:#75715e">&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;</span>
    <span style="color:#f92672">&lt;manifest</span> <span style="color:#960050;background-color:#1e0010">...</span><span style="color:#f92672">&gt;</span>
        <span style="color:#f92672">&lt;uses-permission</span> <span style="color:#a6e22e">android:name=</span><span style="color:#e6db74">&#34;android.permission.INTERNET&#34;</span> <span style="color:#f92672">/&gt;</span>
        <span style="color:#f92672">&lt;application</span>
            <span style="color:#960050;background-color:#1e0010">...</span>
            <span style="color:#a6e22e">android:usesCleartextTraffic=</span><span style="color:#e6db74">&#34;true&#34;</span>
            <span style="color:#960050;background-color:#1e0010">...</span><span style="color:#f92672">&gt;</span>
            ...
        <span style="color:#f92672">&lt;/application&gt;</span>
    <span style="color:#f92672">&lt;/manifest&gt;</span>
</code></pre></div><h2 id="參考連結">參考連結</h2>
<p><a href="https://michaelyb.top/2018/08/Android-HTTP/">Android 中 HTTP 网络请求相关问题</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Launch From Within a Unity App Another Unity App Android</title>
      <link>https://wenrongdev.com/posts/launch-from-within-a-unity-app-another-unity-app-android/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/launch-from-within-a-unity-app-another-unity-app-android/</guid>
      <description>主要用來 Unity app A 如何傳遞資訊給 Unity app B。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>主要用來 Unity app A 如何傳遞資訊給 Unity app B。</p>
<h3 id="demo-script">Demo Script</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">PropertyInfo</span>
{
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementA = <span style="color:#66d9ef">string</span>.Empty;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementB = <span style="color:#66d9ef">string</span>.Empty;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementC = <span style="color:#66d9ef">string</span>.Empty;
}


<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> Launch(<span style="color:#66d9ef">string</span> bundleId, <span style="color:#66d9ef">string</span> storelink)
{
    <span style="color:#66d9ef">bool</span> fail = <span style="color:#66d9ef">false</span>;
    AndroidJavaClass up = <span style="color:#66d9ef">new</span> AndroidJavaClass(<span style="color:#e6db74">&#34;com.unity3d.player.UnityPlayer&#34;</span>);
    AndroidJavaObject ca = up.GetStatic&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;currentActivity&#34;</span>);
    AndroidJavaObject packageManager = ca.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;getPackageManager&#34;</span>);

    AndroidJavaObject launchIntent = <span style="color:#66d9ef">null</span>;
    <span style="color:#66d9ef">try</span>
    {
        launchIntent = packageManager.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;getLaunchIntentForPackage&#34;</span>, bundleId);
    }
    <span style="color:#66d9ef">catch</span> (Exception e)
    {
        fail = <span style="color:#66d9ef">true</span>;
    }

    <span style="color:#66d9ef">if</span> (fail || launchIntent == <span style="color:#66d9ef">null</span>)
        Application.OpenURL(storelink);
    <span style="color:#66d9ef">else</span>
    {
        launchIntent.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;putExtra&#34;</span>, <span style="color:#e6db74">&#34;elementA&#34;</span>, LaunchData.elementA);
        launchIntent.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;putExtra&#34;</span>, <span style="color:#e6db74">&#34;elementB&#34;</span>, LaunchData.elementB);
        launchIntent.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;putExtra&#34;</span>, <span style="color:#e6db74">&#34;elementC&#34;</span>, LaunchData.elementC);
        ca.Call(<span style="color:#e6db74">&#34;startActivity&#34;</span>, launchIntent);
    }
    up.Dispose();
    ca.Dispose();
    packageManager.Dispose();
    launchIntent.Dispose();
}
</code></pre></div><h2 id="property">Property</h2>
<p>PropertyInfo 是用來接受資訊的 class，這邊可以自行修改。</p>
<hr>
<p><a href="https://wenrongdev.com/get-android-intent-data-for-unity/">Get Android intent Data for Unity</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Get Android Intent Data for Unity</title>
      <link>https://wenrongdev.com/posts/get-android-intent-data-for-unity/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/get-android-intent-data-for-unity/</guid>
      <description>主要用來 A App 呼叫 B App 時，B App 該如何接受資料。而 B App 是使用 &lt;code&gt;Unity&lt;/code&gt; 接收。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>主要用來 A App 呼叫 B App 時，B App 該如何接受資料。</p>
<p>而 B App 是使用 <code>Unity</code> 接收。</p>
<h3 id="demo-script">Demo Script</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">PropertyInfo</span>
{
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementA = <span style="color:#66d9ef">string</span>.Empty;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementB = <span style="color:#66d9ef">string</span>.Empty;
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> elementC = <span style="color:#66d9ef">string</span>.Empty;
}

<span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">ExternalCall</span> : MonoBehaviour
{
    PropertyInfo info = <span style="color:#66d9ef">new</span> PropertyInfo();

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> Awake()
    {
<span style="color:#75715e">#if (!UNITY_EDITOR &amp;&amp; UNITY_ANDROID)
</span><span style="color:#75715e"></span>        CreatePushClass(<span style="color:#66d9ef">new</span> AndroidJavaClass(<span style="color:#e6db74">&#34;com.unity3d.player.UnityPlayer&#34;</span>));
<span style="color:#75715e">#endif
</span><span style="color:#75715e"></span>    }

    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> CreatePushClass(AndroidJavaClass UnityPlayer)
    {
<span style="color:#75715e">#if UNITY_ANDROID
</span><span style="color:#75715e"></span>        AndroidJavaObject currentActivity = UnityPlayer.GetStatic&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;currentActivity&#34;</span>);
        AndroidJavaObject intent = currentActivity.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;getIntent&#34;</span>);
        <span style="color:#66d9ef">bool</span> elementA_hasExtra = IsBool(intent, <span style="color:#e6db74">&#34;elementA&#34;</span>);
        <span style="color:#66d9ef">bool</span> elementB_hasExtra = IsBool(intent, <span style="color:#e6db74">&#34;elementB&#34;</span>);
        <span style="color:#66d9ef">bool</span> elementC_hasExtra = IsBool(intent, <span style="color:#e6db74">&#34;elementC&#34;</span>);
        AndroidJavaObject extras = GetExtras(intent);

        <span style="color:#66d9ef">if</span> (extras != <span style="color:#66d9ef">null</span>)
        {
            <span style="color:#66d9ef">if</span> (elementA_hasExtra)
                info.elementA = GetProperty(extras, <span style="color:#e6db74">&#34;elementA&#34;</span>);
            <span style="color:#66d9ef">if</span> (elementB_hasExtra)
                info.elementB = GetProperty(extras, <span style="color:#e6db74">&#34;elementB&#34;</span>);
            <span style="color:#66d9ef">if</span> (elementC_hasExtra)
                info.elementC = GetProperty(extras, <span style="color:#e6db74">&#34;elementC&#34;</span>);
        }
<span style="color:#75715e">#endif
</span><span style="color:#75715e"></span>    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">bool</span> IsBool(AndroidJavaObject intent, <span style="color:#66d9ef">string</span> method)
    {
        <span style="color:#66d9ef">bool</span> b = <span style="color:#66d9ef">false</span>;

        <span style="color:#66d9ef">try</span>
        {
            b = intent.Call&lt;<span style="color:#66d9ef">bool</span>&gt;(<span style="color:#e6db74">&#34;hasExtra&#34;</span>, method);
        }
        <span style="color:#66d9ef">catch</span> (Exception e)
        {
            Debug.Log(e.Message);
        }

        <span style="color:#66d9ef">return</span> b;
    }

    <span style="color:#66d9ef">private</span> AndroidJavaObject GetExtras(AndroidJavaObject intent)
    {
        AndroidJavaObject extras = <span style="color:#66d9ef">null</span>;

        <span style="color:#66d9ef">try</span>
        {
            extras = intent.Call&lt;AndroidJavaObject&gt;(<span style="color:#e6db74">&#34;getExtras&#34;</span>);
        }
        <span style="color:#66d9ef">catch</span> (Exception e)
        {
            Debug.Log(e.Message);
        }

        <span style="color:#66d9ef">return</span> extras;
    }

    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">string</span> GetProperty(AndroidJavaObject extras, <span style="color:#66d9ef">string</span> name)
    {
        <span style="color:#66d9ef">string</span> s = <span style="color:#66d9ef">string</span>.Empty;

        <span style="color:#66d9ef">try</span>
        {
            s = extras.Call&lt;<span style="color:#66d9ef">string</span>&gt;(<span style="color:#e6db74">&#34;getString&#34;</span>, name);
        }
        <span style="color:#66d9ef">catch</span> (Exception e)
        {
            Debug.Log(e.Message);
        }

        <span style="color:#66d9ef">return</span> s;
    }
}
</code></pre></div><h3 id="property">Property</h3>
<p><code>PropertyInfo</code> 是用來接受資訊的 <code>class</code>，這邊可以自行修改。</p>
<hr>
<p><a href="https://wenrongdev.com/launch-from-within-a-unity-app-another-unity-appandroid/">Launch from within a Unity app another Unity app(Android)</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Example Inno Setup</title>
      <link>https://wenrongdev.com/posts/example-inno-setup/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/example-inno-setup/</guid>
      <description>簡易使用 Inno Setup 打包教學。</description>
      <content:encoded><![CDATA[<h2 id="install">Install</h2>
<p>去官網下載 <a href="http://www.jrsoftware.org/isinfo.php">Inno Setup</a>，請下載 <strong>Stable Release</strong> 版本。</p>
<h2 id="add-language">Add Language</h2>
<ol>
<li>下載官方提供的 <a href="https://github.com/jrsoftware/issrc">Github</a>，直接下載 <strong>Releases</strong> 版本，完成後解壓縮。</li>
<li>複製 <code>root/Files/Languages</code> 資料夾，貼上並且覆蓋 <strong>Inno Setup 安裝資料夾</strong>。<img loading="lazy" src="https://imgur.com/3gD0X18.jpg" alt="img_1"  />
</li>
</ol>
<h2 id="使用方式">使用方式</h2>
<p>可以參考以下腳本，也可以自己寫，不知道寫法可以參考<a href="http://www.jrsoftware.org/ishelp/">官方文件</a>。</p>
<pre tabindex="0"><code class="language-Pascal" data-lang="Pascal">
#define MyAppGUID &quot;{{D0D7EBDD-2493-4086-A306-AB012D2AFA93}&quot;
#define MyAppName &quot;Examle&quot;
#define MyAppFolder &quot;ExampleFolder&quot;
#define MyAppSetupExeName &quot;Examle&quot;

#define MyAppExeName &quot;Examle.exe&quot;
#define MyAppURL &quot;https://wenrongdev.com/&quot;
#define MyAppPublisher &quot;wen rong studio&quot;

[Setup]
AppId={#MyAppGUID}
AppName={#MyAppName}
AppVersion=0.1.0
AppVerName={#MyAppName}
AppPublisher = {#MyAppPublisher}
AppPublisherURL = {#MyAppURL}
AppSupportURL = {#MyAppURL}
AppUpdatesURL = {#MyAppURL}
Compression = lzma2
DefaultDirName={commonpf32}\{#MyAppFolder}
DisableProgramGroupPage=yes
DefaultGroupName={#MyAppName}
UninstallDisplayIcon={app}ForwardSlash{#MyAppExeName}
SolidCompression = no
OutputDir = &quot;Setup&quot;
OutputBaseFilename = {#MyAppSetupExeName}
ShowLanguageDialog=yes

// 是否需要分割
DiskSpanning=yes
SlicesPerDisk=3
DiskSliceSize=1566000000
///

[Languages]
Name: EN; MessagesFile: &quot;compiler:Default.isl&quot;
Name: CT; MessagesFile: &quot;compiler:Languages\Unofficial\ChineseTraditional.isl&quot;
Name: CS; MessagesFile: &quot;compiler:Languages\Unofficial\ChineseSimplified.isl&quot;
Name: JP; MessagesFile: &quot;compiler:Languages\Japanese.isl&quot;

[CustomMessages]
MyAppName = {#MyAppName}
MyAppVerName = {#MyAppName} %1

[Messages]
BeveledLabel = {#MyAppURL}

[Dirs]
Name: &quot;{app}&quot;; Permissions: everyone-full

[Files]
Source: &quot;{#MyAppFolder}\*&quot;; DestDir: &quot;{app}\{#MyAppFolder}&quot;; Flags: ignoreversion recursesubdirs

[Icons]
Name: &quot;{userdesktop}\{cm:MyAppName}&quot;; Filename: &quot;{app}\{#MyAppFolder}\{#MyAppExeName}&quot;;

[Code]
function GetNumber(var temp: String): Integer;
var
  part: String;
  pos1: Integer;
begin
  if Length(temp) = 0 then
  begin
    Result := -1;
    Exit;
  end;
    pos1 := Pos('.', temp);
    if (pos1 = 0) then
    begin
      Result := StrToInt(temp);
    temp := '';
    end
    else
    begin
    part := Copy(temp, 1, pos1 - 1);
      temp := Copy(temp, pos1 + 1, Length(temp));
      Result := StrToInt(part);
    end;
end;

function CompareInner(var temp1, temp2: String): Integer;
var
  num1, num2: Integer;
begin
    num1 := GetNumber(temp1);
  num2 := GetNumber(temp2);
  if (num1 = -1) or (num2 = -1) then
  begin
    Result := 0;
    Exit;
  end;
      if (num1 &gt; num2) then
      begin
        Result := 1;
      end
      else if (num1 &lt; num2) then
      begin
        Result := -1;
      end
      else
      begin
        Result := CompareInner(temp1, temp2);
      end;
end;

function CompareVersion(str1, str2: String): Integer;
var
  temp1, temp2: String;
begin
    temp1 := str1;
    temp2 := str2;
    Result := CompareInner(temp1, temp2);
end;

function InitializeSetup(): Boolean;
var
  oldVersion: String;
  uninstaller: String;
  ErrorCode: Integer;
  vCurID      :String;
  vCurAppName :String;
begin
  vCurID:= '{#SetupSetting(&quot;AppId&quot;)}';
  vCurAppName:= '{#SetupSetting(&quot;AppName&quot;)}';
  vCurID:= Copy(vCurID, 2, Length(vCurID) - 1);

  if RegKeyExists(HKEY_LOCAL_MACHINE,
    'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + vCurID + '_is1') then
  begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE,
      'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + vCurID + '_is1',
      'DisplayVersion', oldVersion);
    if (CompareVersion(oldVersion, '{#SetupSetting(&quot;AppVersion&quot;)}') &lt; 0) then
    begin
      if MsgBox('Version ' + oldVersion + ' of ' + vCurAppName + ' is already installed. Continue to use this old version?',
        mbConfirmation, MB_YESNO) = IDYES then
      begin
        Result := False;
      end
      else
      begin
          RegQueryStringValue(HKEY_LOCAL_MACHINE,
            'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + vCurID + '_is1',
            'UninstallString', uninstaller);
          ShellExec('runas', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
          Result := True;
      end;
    end
    else
    begin
      MsgBox('Version ' + oldVersion + ' of ' + vCurAppName + ' is already installed. This installer will exit.',
        mbInformation, MB_OK);
      Result := False;
    end;
  end
  else
  begin
    Result := True;
  end;
end;

</code></pre><h2 id="修改方式">修改方式</h2>
<p>假如是使用複製舊有的 <code>.iss 檔</code>，只需要修改幾個需要注意的文字即可。</p>
<p>正常的資料夾結構</p>
<table>
<thead>
<tr>
<th style="text-align:left">Folder</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ExampleFolder</td>
<td style="text-align:left">打包前的資料夾</td>
</tr>
<tr>
<td style="text-align:left">Setup</td>
<td style="text-align:left">Inno Setup 輸出的資料夾</td>
</tr>
<tr>
<td style="text-align:left">.iss</td>
<td style="text-align:left">Inno Setup Script</td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="https://imgur.com/AXDhz5x.jpg" alt="img_2"  />
</p>
<h3 id="修改-iss">修改 .iss</h3>
<pre tabindex="0"><code class="language-Pascal" data-lang="Pascal">#define MyAppGUID &quot;GUID&quot;
#define MyAppName &quot;Examle&quot;
#define MyAppFolder &quot;ExampleFolder&quot;
#define MyAppSetupExeName &quot;Examle&quot;
#define MyAppExeName &quot;Examle.exe&quot;
#define MyAppURL &quot;https://wenrongdev.com/&quot;
#define MyAppPublisher &quot;wen rong studio&quot;
</code></pre><h3 id="需修改地方">需修改地方</h3>
<table>
<thead>
<tr>
<th style="text-align:left">Arg</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">MyAppGUID</td>
<td style="text-align:left">安裝系統 GUID，產生方式為 <code>Tools/Generated GUID</code>。</td>
</tr>
<tr>
<td style="text-align:left">MyAppName</td>
<td style="text-align:left">桌面路徑名稱 。</td>
</tr>
<tr>
<td style="text-align:left">MyAppFolder</td>
<td style="text-align:left">安裝目錄名稱。</td>
</tr>
<tr>
<td style="text-align:left">MyAppSetupExeName</td>
<td style="text-align:left">Inno Setup 輸出安裝檔名稱 。</td>
</tr>
</tbody>
</table>
<h4 id="取得-guid-方法">取得 GUID 方法</h4>
<p><img loading="lazy" src="https://imgur.com/d05PwU1.jpg" alt="img_3"  />
</p>
<h2 id="githubhttpsgithubcomwenrong274exampleinnosetup"><a href="https://github.com/Wenrong274/ExampleInnoSetup">Github</a></h2>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Whitelist for Windows UAC</title>
      <link>https://wenrongdev.com/posts/whitelist-for-windows-uac/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/whitelist-for-windows-uac/</guid>
      <description>為了ㄧ般使用者的權限問題也不能關閉 Windows UAC。 也不可能修改一般使用者的權限，所以需要讓 Windows UAC 加入此程式為白名單，這樣就不會每次都會跳出權限要求。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>因為某些程式開啟時，會跳出需要系統管理員（Administrator）權限執行程式，也導致了只要是ㄧ般使用者每次開啟時都需要輸入系統管理員密碼來執行。為了ㄧ般使用者的權限問題也不能關閉 Windows UAC。 也不可能修改一般使用者的權限，所以需要讓 Windows UAC 加入此程式為白名單，這樣就不會每次都會跳出權限要求。</p>
<h2 id="已知限制條件">已知限制條件</h2>
<ol>
<li>程式必須以 Administrator 執行</li>
<li>一般使用者可以執行</li>
<li>不可完全關閉 Windows UAC</li>
</ol>
<h2 id="解決方式">解決方式</h2>
<p>根據<a href="https://www.taode.idv.tw/wordpress/?p=639">不變更 UAC 安全性，但執行程式時又不擾民的設定方式</a>，可以在 Windows Regedit 新增白名單。</p>
<ol>
<li>Win+R 輸入 regedit 執行</li>
<li>根據此路徑尋找 <code>HKEY_CURRENT_USERS\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers</code></li>
<li>右鍵新增字串值，名稱為程式（exe）路徑、資料為<code>~ RunAsInvoker</code></li>
</ol>
<h2 id="c-解決方式">C# 解決方式</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">RegEditWhiteList</span>
{
    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">string</span> keyName { <span style="color:#66d9ef">get</span>; <span style="color:#66d9ef">set</span>; }
    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">readonly</span> <span style="color:#66d9ef">string</span> root = <span style="color:#e6db74">@&#34;Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers&#34;</span>;
    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">readonly</span> <span style="color:#66d9ef">string</span> keyValue = <span style="color:#e6db74">&#34;~ RunAsInvoker&#34;</span>;

    <span style="color:#66d9ef">public</span> RegEditWhiteList(<span style="color:#66d9ef">string</span> keyName)
    {
        <span style="color:#66d9ef">this</span>.keyName = keyName;
    }

    <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">void</span> SendRegedit()
    {
        RegistryKey key = Registry.CurrentUser.OpenSubKey(root, <span style="color:#66d9ef">true</span>);
        key.SetValue(keyName, keyValue,RegistryValueKind.String);
        key.Close();
    }
}
</code></pre></div><h2 id="githubrepo"><a href="https://github.com/Wenrong274/UACWhitelist">GitHub</a></h2>
<h3 id="使用方式">使用方式</h3>
<p>因為修改註冊碼是修正當前使用者的註冊碼，因此只要換使用者就需要再新增一次白名單。</p>
<h2 id="參考資料">參考資料</h2>
<p><a href="https://www.taode.idv.tw/wordpress/?p=639">不變更 UAC 安全性，但執行程式時又不擾民的設定方式</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>IOS Build Note for Unity 2019 Vuforia</title>
      <link>https://wenrongdev.com/posts/ios-build-note-for-unity-2019-vuforia/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/ios-build-note-for-unity-2019-vuforia/</guid>
      <description>Vuforia iOS Build and Run Error。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<ul>
<li>Unity 2019.2.11f1</li>
<li>Vuforia 8.5.9</li>
</ul>
<h3 id="ios-build-and-run-error">iOS Build and Run Error</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">ld: library not found for -liPhone-lib

clang: error: linker command failed with exit code 1 (use -v to see invocation)
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/VfEWoVv.jpg" alt="img_1"  />
</p>
<h4 id="solution---ios-build-and-run-error">Solution - iOS Build and Run Error</h4>
<p>Build Setting -&gt; Search Paths -&gt; Library Search Paths</p>
<p>移除 <code>&quot;$(SECROOT)&quot;</code> 參數</p>
<p><img loading="lazy" src="https://i.imgur.com/mHa5XkT.jpg" alt="img_2"  />
</p>
<h2 id="ios-archive-error">iOS Archive Error</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">ld: warning: ignoring file ...  building for iOS-armv7 but attempting to link with file built for iOS-arm64.
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/7YCtki6.jpg" alt="img_3"  />
</p>
<h4 id="solution---ios-archive-error">Solution - iOS Archive Error</h4>
<p>根據 <a href="https://library.vuforia.com/content/vuforia-library/en/articles/Release_Notes/Vuforia-SDK-Release-Notes.html">Vuforia Engine Release Notes</a> 在 <code>v8.1.7</code>之後不支援 <code>32-bit</code>，並且最低支援 <code>iOS 11</code>，因此需要把專案版本最低版本設定為 iOS。</p>
<ul>
<li>
<p>設定 iOS architectures</p>
<p>Build Setting -&gt; Architectures -&gt; Architectures</p>
<p>Architectures 改為 <code>Standard architectures</code></p>
<p><img loading="lazy" src="https://i.imgur.com/1fcwuH9.jpg" alt="img_5"  />
</p>
</li>
<li>
<p>設定 iOS 版本</p>
<p>Build Setting -&gt; Deployment -&gt; iOS Deployment Target</p>
<p>iOS Deployment Target 改為 <code>iOS 11.0</code></p>
<p><img loading="lazy" src="https://i.imgur.com/rPGArpU.jpg" alt="img_4"  />
</p>
</li>
</ul>
<h2 id="ios-distribution-error">iOS Distribution Error</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">ERROR ITMS-90534
</code></pre></div><p><img loading="lazy" src="https://i.imgur.com/0KoHlnL.jpg" alt="img_6"  />
</p>
<h3 id="solution---ios-distribution-error">Solution - iOS Distribution Error</h3>
<p>請使用 <a href="https://developer.apple.com/download/"><strong>Xcode 11.2.1</strong></a> 輸出，即可修正。</p>
<h2 id="參考文章">參考文章</h2>
<p><a href="https://qiita.com/Narinii/items/d571ac9a4b2193f19bef">Unity Xcode Error &ldquo;library not found for -&rdquo; の解決方法</a></p>
<p><a href="https://stackoverflow.com/a/58747930">Can&rsquo;t submit apps to AppStore: ERROR ITMS-90534: &ldquo;Invalid Toolchain</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Install IPA With OTA</title>
      <link>https://wenrongdev.com/posts/install-ipa-with-ota/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/install-ipa-with-ota/</guid>
      <description>由於 iTunes 12.6 之後不提供 .ipa 檔安裝，導致無法提供測試 App，所以有人研究出很多安裝方式。不過這邊主要是介紹 OTA 的方式。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>由於 iTunes 12.6 之後不提供 .ipa 檔安裝，導致無法提供測試 App，所以有人研究出很多安裝方式。不過這邊主要是介紹 OTA 的方式。</p>
<p>其他的安裝方式：<a href="https://medium.com/@lefty./itunes-12-7-%E7%A7%BB%E9%99%A4%E4%BA%86-apps-%E7%9A%84%E9%81%B8%E9%A0%85-%E6%88%91%E8%A9%B2%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%9D-ipa-%E6%AA%94%E6%A1%88%E5%88%B0-ios-%E8%A3%9D%E7%BD%AE-2cad1d35d017">iTunes 12.7 移除了 Apps 的選項，我該如何安裝 .ipa 檔案到 iOS 裝置？</a></p>
<h3 id="using-ota">Using OTA</h3>
<p>使用 OTA（Over-the-Air）需要有三個檔案 <code>.ipa(ad-Hoc)</code>、<code>.plist</code>、<code>index.html</code></p>
<p><code>.ipa(ad-Hoc)</code> 需要上傳去雲端空間，目前選擇的雲端空間是 <a href="https://www.dropbox.com">Dropbox</a>。</p>
<p>還需要 <code>Host Website</code> 上傳 <code>.plist</code>、<code>index.html</code>，目前選擇的是 <a href="https://github.com/">GitHub</a>。</p>
<p>所以只要使用 <code>Host Website</code> 就可以安裝了。</p>
<p>參考文章：<a href="https://stackoverflow.com/questions/22658987/error-when-distributing-an-ipa-over-the-air-with-dropbox-ios-7-1/25302392#25302392">Error when distributing an IPA over the air with dropbox - iOS 7.1</a></p>
<h3 id="upload-ipa-to-dropbox-and-get-public-link">Upload .ipa to Dropbox and Get public link</h3>
<ol>
<li>
<p>先把輸出好的 <code>.ipa(ad-Hoc)</code> 上傳至 <a href="https://www.dropbox.com">Dropbox</a> 並且設定分享。</p>
</li>
<li>
<p>將分享網址裡的 <code>www.dropbox.com</code> 替換為 <code>dl.dropboxusercontent.com</code>。</p>
</li>
<li>
<p>紀錄修改 <code>public link</code>。</p>
</li>
</ol>
<h4 id="create-manifestplist">Create manifest.plist</h4>
<pre tabindex="0"><code class="language-plist" data-lang="plist">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
    &lt;key&gt;items&lt;/key&gt;
    &lt;array&gt;
        &lt;dict&gt;
            &lt;key&gt;assets&lt;/key&gt;
            &lt;array&gt;
                &lt;dict&gt;
                    &lt;key&gt;kind&lt;/key&gt;
                    &lt;string&gt;software-package&lt;/string&gt;
                    &lt;key&gt;url&lt;/key&gt;
                    &lt;string&gt;http://YOUR_SERVER_URL/YOUR-IPA-FILE.ipa&lt;/string&gt;
                &lt;/dict&gt;
            &lt;/array&gt;
            &lt;key&gt;metadata&lt;/key&gt;
            &lt;dict&gt;
                &lt;key&gt;bundle-identifier&lt;/key&gt;
                &lt;string&gt;com.yourCompany.productName&lt;/string&gt;
                &lt;key&gt;bundle-version&lt;/key&gt;
                &lt;string&gt;1.0.0&lt;/string&gt;
                &lt;key&gt;kind&lt;/key&gt;
                &lt;string&gt;software&lt;/string&gt;
                &lt;key&gt;title&lt;/key&gt;
                &lt;string&gt;YOUR APP NAME&lt;/string&gt;
            &lt;/dict&gt;
        &lt;/dict&gt;
    &lt;/array&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre><p>修改好 <code>public link</code>、<code>app info</code> 就完成 <code>.plist</code>。</p>
<h4 id="create-indexhtml">Create index.html</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html"><span style="color:#75715e">&lt;!DOCTYPE html&gt;</span>
&lt;<span style="color:#f92672">html</span>&gt;
&lt;<span style="color:#f92672">head</span>&gt;
    &lt;<span style="color:#f92672">title</span>&gt;App install&lt;/<span style="color:#f92672">title</span>&gt;
&lt;/<span style="color:#f92672">head</span>&gt;
&lt;<span style="color:#f92672">body</span>&gt;
    &lt;<span style="color:#f92672">h2</span>&gt;builds&lt;/<span style="color:#f92672">h2</span>&gt;
&lt;<span style="color:#f92672">a</span> <span style="color:#a6e22e">href</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;itms-services://?action=download-manifest&amp;url=http://YOUR_SERVER_URL/manifest.plist&#34;</span>&gt; App&lt;/<span style="color:#f92672">a</span>&gt;&lt;/<span style="color:#f92672">body</span>&gt;
&lt;/<span style="color:#f92672">body</span>&gt;
&lt;/<span style="color:#f92672">html</span>&gt;
</code></pre></div><p>把 <code>url=http://YOUR_SERVER_URL/manifest.plist</code> 替換成 <code>Website manifest.plist</code>。</p>
<h3 id="hosting-using-github">Hosting using Github</h3>
<ol>
<li>Create a new repository（<a href="https://gitbook.tw/chapters/github/using-github-pages.html">教學文章</a>）</li>
<li>上傳 <code>manifest.plist</code>、<code>index.html</code></li>
</ol>
<p>得到 Github Website <code>index.html</code>就可以安裝 <code>.ipa</code></p>
<h3 id="參考文章">參考文章</h3>
<p><a href="https://medium.com/@lefty./itunes-12-7-%E7%A7%BB%E9%99%A4%E4%BA%86-apps-%E7%9A%84%E9%81%B8%E9%A0%85-%E6%88%91%E8%A9%B2%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%9D-ipa-%E6%AA%94%E6%A1%88%E5%88%B0-ios-%E8%A3%9D%E7%BD%AE-2cad1d35d017">iTunes 12.7 移除了 Apps 的選項，我該如何安裝 .ipa 檔案到 iOS 裝置？</a></p>
<p><a href="https://www.dropbox.com">從網路上下載 ipa 檔並且安裝在 iPhone or iPad(Download and install an ipa from url on iOS)</a></p>
<p><a href="https://stackoverflow.com/questions/22658987/error-when-distributing-an-ipa-over-the-air-with-dropbox-ios-7-1/25302392#25302392">Error when distributing an IPA over the air with dropbox - iOS 7.1</a></p>
<p><a href="https://gitbook.tw/chapters/github/using-github-pages.html">使用 GitHub 免費製作個人網站</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity 5.3 Native System Language</title>
      <link>https://wenrongdev.com/posts/unity-5.3-native-system-language/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-5.3-native-system-language/</guid>
      <description>使用 Unity 取得 Windows、Android、iOS 原生語系。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在 Unity API 中有 <a href="https://docs.unity3d.com/530/Documentation/ScriptReference/Application-systemLanguage.html">Application.systemLanguage</a> 可以取得系統語言。可是 Unity 5.3 用於 iOS 上，只要是裝置為中文語系一律回傳 SystemLanguage.Chinese，無法判別簡 / 繁語系，因此才研究怎麼取得 Windows、Android、iOS 原生語系。</p>
<h3 id="windows-platform">Windows Platform</h3>
<p>利用 <a href="https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getsystemdefaultlcid">GetSystemDefaultLCID</a> 取得本機端語系，再利用 <a href="https://docs.microsoft.com/zh-tw/dotnet/api/system.globalization.cultureinfo.getcultureinfo?view=netframework-3.5">CultureInfo.GetCultureInfo</a> 轉化為本機端語系文化。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#a6e22e">[DllImport(&#34;kernel32.dll&#34;)]</span>
</code></pre></div><p><a href="http://answers.unity.com/answers/1323282/view.html">參考文章</a></p>
<h3 id="android-platform">Android Platform</h3>
<p>直接呼叫原生系統 API 取得。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">string</span> CurrentAndroidLanguage()
 {
     <span style="color:#66d9ef">string</span> result = <span style="color:#e6db74">&#34;&#34;</span>;
     <span style="color:#66d9ef">using</span> (AndroidJavaClass cls = <span style="color:#66d9ef">new</span> AndroidJavaClass(<span style="color:#e6db74">&#34;java.util.Locale&#34;</span>))
     {
         <span style="color:#66d9ef">if</span> (cls != <span style="color:#66d9ef">null</span>)
         {
             <span style="color:#66d9ef">using</span> (AndroidJavaObject locale = cls.CallStatic(<span style="color:#e6db74">&#34;getDefault&#34;</span>))
             {
                 <span style="color:#66d9ef">if</span> (locale != <span style="color:#66d9ef">null</span>)
                 {
                     result = locale.Call(<span style="color:#e6db74">&#34;getLanguage&#34;</span>) + <span style="color:#e6db74">&#34;_&#34;</span> + locale.Call(<span style="color:#e6db74">&#34;getDefault&#34;</span>);
                     Debug.Log(<span style="color:#e6db74">&#34;Android lang: &#34;</span> + result);
                 }
                 <span style="color:#66d9ef">else</span>
                 {
                     Debug.Log(<span style="color:#e6db74">&#34;locale null&#34;</span>);
                 }
             }
         }
         <span style="color:#66d9ef">else</span>
         {
             Debug.Log(<span style="color:#e6db74">&#34;cls null&#34;</span>);
         }
     }
     <span style="color:#66d9ef">return</span> result;
 }
</code></pre></div><p><a href="https://forum.unity.com/threads/application-systemlanguage.211171/#post-1423369">參考文章</a></p>
<h3 id="ios-platfrom">iOS Platfrom</h3>
<p>製作一個 .mm 文件，內容如下</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-objc" data-lang="objc"> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">cStringCopy</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> string)
 {
   <span style="color:#66d9ef">if</span>(string <span style="color:#f92672">==</span> NULL){
     <span style="color:#66d9ef">return</span> NULL;
   }
   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> newString <span style="color:#f92672">=</span> (<span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)malloc(strlen(string) <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>);
   strcpy(newString, string);
   <span style="color:#66d9ef">return</span> newString;
 }
 <span style="color:#66d9ef">extern</span> <span style="color:#e6db74">&#34;C&#34;</span>
 {
   <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> CurIOSLang ()
   {
     NSArray <span style="color:#f92672">*</span>languages <span style="color:#f92672">=</span> [NSLocale preferredLanguages];
     NSString <span style="color:#f92672">*</span>CurrentLanguage <span style="color:#f92672">=</span> [languages objectAtIndex:<span style="color:#ae81ff">0</span>];
     <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">cStringCopy</span>([CurrentLanguage UTF8String]);
   }
 }
</code></pre></div><p>在 C# 寫出 CurIOSLang 的接口</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#a6e22e">[DllImport(&#34;__Internal&#34;)]</span>
<span style="color:#66d9ef">private</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">string</span> CurIOSLang();
</code></pre></div><p>這樣就可以在 Unity 直接呼叫 CurIOSLan 取得 iOS 語系了。</p>
<p><a href="https://blog.csdn.net/teng_ontheway/article/details/50277169">參考文章</a></p>
<hr>
<h3 id="github-repohttpsgithubcomwenrong274nativesystemlanguage"><a href="https://github.com/Wenrong274/NativeSystemLanguage">Github repo</a></h3>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity WebGL Template</title>
      <link>https://wenrongdev.com/posts/unity-webgl-template/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-webgl-template/</guid>
      <description>執行 WebGL 時都會有 Unity Logo &amp;amp; Loading。目前此專案修改 Unity Logo 的部分。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>執行 WebGL 時都會有 Unity Logo &amp; Loading。目前此專案修改 Unity Logo 的部分。</p>
<p>需要更詳細的內容可以參考官方文件（<a href="https://docs.unity3d.com/Manual/webgl-templates.html">Unity Document</a>）。</p>
<p>會比較建議使用 <a href="https://assetstore.unity.com/packages/tools/gui/responsive-webgl-template-117308">Responsive WebGL Template</a>，省去自己測試修改的麻煩，不過還是需要改 Logo、Icon 的部分。</p>
<h3 id="setting-up-your-template">Setting Up Your Template</h3>
<ol>
<li>
<p>Import <a href="https://github.com/hybrid274/UnityWebGLTemplate/blob/master/build/release.unitypackage">Unitypackage</a></p>
</li>
<li>
<p>Set up Unity Player Setting
Edit -&gt; Project Settings -&gt; Player, On the WebGL tab -&gt; Resolution and Presentation -&gt; <strong>Selcet LogoTemplates</strong></p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/hybrid274/UnityWebGLTemplate/master/images/logotemplate.jpg" alt="image_1"  />
</p>
</li>
<li>
<p>Change Your Logo</p>
<p>Logo 規格建議不要太大張。</p>
<p>Path: root/Assets/WebGLTemplates/LogoTemplate/<strong>logo.png</strong></p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/hybrid274/UnityWebGLTemplate/master/images/setinglogo.JPG" alt="image_2"  />
</p>
</li>
</ol>
<h3 id="github-repohttpsgithubcomwenrong274unitywebgltemplate"><a href="https://github.com/Wenrong274/UnityWebGLTemplate">GitHub repo</a></h3>
<p><a href="https://ocias.com/blog/how-to-set-up-a-unity-webgl-template/">參考文章</a></p>
<hr>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unity WebGL RectMask2D Does Not Work</title>
      <link>https://wenrongdev.com/posts/unity-webgl-rectmask2d-does-not-work/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wenrongdev.com/posts/unity-webgl-rectmask2d-does-not-work/</guid>
      <description>用於 WebGL RectMask2D 失去作用的簡易修正。</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>此 Script 用於 WebGL RectMask2D 失去作用的簡易修正。</p>
<p><code>建議</code>還是先輸出測試確定 RectMask2D 失效再使用此 Script。</p>
<h3 id="使用方式">使用方式</h3>
<p>直接在 Canvas 物件底下 Add Component FixRectMask2dWebGL 即可。</p>
<h3 id="script">Script</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-C#" data-lang="C#"><span style="color:#66d9ef">public</span> <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">FixRectMask2dWebGL</span> : MonoBehaviour
{
<span style="color:#75715e">#if PlatformWebGL
</span><span style="color:#75715e"></span>    <span style="color:#66d9ef">private</span> <span style="color:#66d9ef">void</span> Awake()
    {
        <span style="color:#66d9ef">var</span> items = GetComponentsInChildren&lt;MaskableGraphic&gt;(<span style="color:#66d9ef">true</span>);
        <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i = <span style="color:#ae81ff">0</span>; i &lt; items.Length; i++)
        {
            Material m = items[i].materialForRendering;
            <span style="color:#66d9ef">if</span> (m != <span style="color:#66d9ef">null</span>)
                m.EnableKeyword(<span style="color:#e6db74">&#34;UNITY_UI_CLIP_RECT&#34;</span>);
        }
    }
<span style="color:#75715e">#endif
</span><span style="color:#75715e"></span>}
</code></pre></div><hr>
<p><a href="https://forum.unity.com/threads/rectmask2d-does-not-work-when-canvas-render-mode-is-sceen-space-camera-or-world-space-2017-2-0f3.499966/#post-4484971">參考文章</a></p>
]]></content:encoded>
    </item>
    
    
    
  </channel>
</rss>
